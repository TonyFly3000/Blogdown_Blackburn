<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Tony Duan</title>
    <link>/post/</link>
    <description>Recent content in Posts on Tony Duan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2019. All rights reserved.</copyright>
    <lastBuildDate>Mon, 30 Dec 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Bangkok Firefly2</title>
      <link>/post/bangkok-firefly2/</link>
      <pubDate>Mon, 30 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/bangkok-firefly2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Bangkok Firefly 寻找萤火虫的故事</title>
      <link>/post/bangkok-firefly/</link>
      <pubDate>Mon, 30 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/bangkok-firefly/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Thai Street Food in Bangkok</title>
      <link>/post/thai-street-food-in-bangkok/</link>
      <pubDate>Mon, 30 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/thai-street-food-in-bangkok/</guid>
      <description>$1.29 Thai Street Food Buffet recommend by FULL TIME TRAVEL EATER Mark WiensAddress:Around Lumphini Park Gate 7 open during 6:00am to noon
I took a Grab for $10 to have this $1.29 Thai Street Food BuffetMore Thai foodThai street foodPad Thai with Big river prawn海鮮丼@Mercury VilleGapao @Mercury VilleThe coffee cupThe Cool motorcycle coffee shop bangkokThe Barista told me the motorcycle is from Itlay</description>
    </item>
    
    <item>
      <title>Tech day - machine learning</title>
      <link>/post/tech-day-machine-learning/</link>
      <pubDate>Sat, 21 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/tech-day-machine-learning/</guid>
      <description>https://www.huodongxing.com/event/9508822785400</description>
    </item>
    
    <item>
      <title>eBay connect 2019</title>
      <link>/post/ebay-connect/</link>
      <pubDate>Thu, 19 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/ebay-connect/</guid>
      <description>BBQ Pork rice with chicke wing and sunny egg from God of Cookery香港金牌茶餐厅
地址:深圳华强北振华路109号
Iron Cow Taiwanese Beef Noodles鐵牛台灣牛肉麵
地址:旺角彌敦道688號旺角中心1期地庫A舖
</description>
    </item>
    
    <item>
      <title>Family day</title>
      <link>/post/family-day/</link>
      <pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/family-day/</guid>
      <description>Yum chababy boom</description>
    </item>
    
    <item>
      <title>Best wishes to Megan</title>
      <link>/post/best-wish-to-megan/</link>
      <pubDate>Thu, 05 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/best-wish-to-megan/</guid>
      <description>Best wishes to our top talent intern Megan Du.
Cant believe one year just past by. Wish time can go a little slower.</description>
    </item>
    
    <item>
      <title>UFC Shenzhen</title>
      <link>/post/ufc-shenzhen/</link>
      <pubDate>Sat, 31 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/ufc-shenzhen/</guid>
      <description>The New UFC champion Zhang Weili 张伟丽Monster energy drinkShenzhen Universiade Center Arena</description>
    </item>
    
    <item>
      <title>AWS E-commerce day</title>
      <link>/post/aws-e-commerce-day/</link>
      <pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/aws-e-commerce-day/</guid>
      <description>https://www.huodongxing.com/event/8504637740800</description>
    </item>
    
    <item>
      <title>Kuala Lumpur &amp; Singapore</title>
      <link>/post/kuala-lumpur-singapore/</link>
      <pubDate>Mon, 12 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/kuala-lumpur-singapore/</guid>
      <description>All about Durian Musang KingNasi Lamak ,Prawn noodel &amp;amp; Roti tissueBah-Kut-Teh , Roti Prata and icecream sandwishNew Shopping mall Jade @ Changi Airport</description>
    </item>
    
    <item>
      <title>One Day in Chengdu</title>
      <link>/post/one-night-in-chengdu/</link>
      <pubDate>Fri, 02 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/one-night-in-chengdu/</guid>
      <description>无早 CafeHot pot</description>
    </item>
    
    <item>
      <title>Introduction to shell for data science</title>
      <link>/post/introduction-to-shell-for-data-science/</link>
      <pubDate>Fri, 26 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/introduction-to-shell-for-data-science/</guid>
      <description>开篇厌倦了点击鼠标？想批量处理文件/数据。本文或许可以帮到你。会了脚本语言shell也就会了linux中的基本操作。
Part 1 : 使用shell处理文件(Manipulating files and data)展示当前位置
pwd 列出当前位置的所有文件
ls 列出文件夹 input_folder 中的所有文件
ls input_folder 进入文件夹 input_folder,然后展示当前位置
cd input_folderpwd 返回上一级
cd .. 复制文件 test.txt 为2个文件并命名为 duplicate001.txt/duplicate002.txt。然后列出当前位置的所有文件
cp test.txt duplicate001.txtcp test.txt duplicate002.txtls 将2个文件 duplicate001.txt/duplicate002.txt 放到 文件夹input_folder 中
mv duplicate001.txt duplicate002.txt input_folder  将文件 test.txt 改名为 new_test.txt
mv test.txt new_test.txt 删除文件 new_test.txt
rm new_test.txt 删除文件夹 backup</description>
    </item>
    
    <item>
      <title>Data Discovery:China divorce ratio</title>
      <link>/post/china-divorce-ratio/</link>
      <pubDate>Sun, 14 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/china-divorce-ratio/</guid>
      <description>开篇他们离了。他们也离了。在当今这个物欲横流的社会里是否还存在爱情?
本文通过统计局2009年到2017年各省份的结婚，离婚，人均年收入数据来看中国爱情故事的发展。
注意：文中的离婚比率不等于离婚率。离婚比率高有可能是离婚的人多了也有可能是结婚的人少了。
packagelibrary(tidyverse)library(dplyr)library(scales)library(ggplot2)library(readr)library(janitor)library(ggthemes)library(readxl)library(rayshader)library(sqldf)theme_set(theme_light())导入数据数据源: 中国统计局
http://data.stats.gov.cn/
https://www.kaggle.com/tduan007/china-marriage-and-divorce-data
marriage001=read_csv(&amp;#39;marriage.csv&amp;#39;)divorce001=read_csv(&amp;#39;divorce.csv&amp;#39;)income001=read_excel(&amp;#39;income.xls&amp;#39;)head(marriage001)## # A tibble: 6 x 10## area `2017` `2016` `2015` `2014` `2013` `2012` `2011` `2010` `2009`## &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;## 1 北京市 15.2 16.6 16.6 17 16.4 17.4 17.3 13.</description>
    </item>
    
    <item>
      <title>Shanghai Summer</title>
      <link>/post/shanghai-summer/</link>
      <pubDate>Wed, 03 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/shanghai-summer/</guid>
      <description>Run into Youtuber Thomas 阿福Youtube channel:https://www.youtube.com/channel/UC689uDf0ryZniKpuSK9ESTw/videos
bilibili Channel:https://space.bilibili.com/25807917
favorite cafe : Jamaica Blue地址:上海九江路700号南新雅大酒店1楼
One man GymOne man Hot potThe Bund from a new angle</description>
    </item>
    
    <item>
      <title>Data structures in R</title>
      <link>/post/data-structures-in-r/</link>
      <pubDate>Mon, 01 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/data-structures-in-r/</guid>
      <description>Introduction to Data structures and types in RThere are 5 Data structures in R:
VectorMatrixArrayData frameListThere are 4 data types in R:
numericcharacterlogicaldate1. Vectorvector is 1 dimension elements.vector can only have one data type. For example all number or all character.
vector001 is numeric type and Vector structurevector001=c(1,2,3,4,5)vector001## [1] 1 2 3 4 5class(vector001)## [1] &amp;quot;numeric&amp;quot;is.</description>
    </item>
    
    <item>
      <title>Tensorflow in R 系列(1) :数字图片分类 MNIST image classification</title>
      <link>/post/tensorflow-in-r-1-mnist-image-classification/</link>
      <pubDate>Tue, 25 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/tensorflow-in-r-1-mnist-image-classification/</guid>
      <description>开篇Tensorflow in R 系列，将分享如何使用R语言在Tensorflow/Keras 框架中训练深度学习模型。MNIST 全称为 Modified National Institute of Standards and Technology。这个名词一点也不重要。MNIST 数据为 7万张（6万张训练+1万张测试） 0-9的手写数字图片安装 R 和 R studio此次省略300字。建议使用云计算平台。如Kaggle Kernel/Google Codelab/Google Cloud 等
可参考【在 Google Cloud 安装 R studio server】： https://tduan.netlify.com/post/google-cloud-r-studio-server/
安装 keras package如果你的计算环境有GPU,可以安装GPU版本。install_tensorflow(gpu = T)
install.packages(&amp;#39;devtools&amp;#39;)devtools::install_github(&amp;quot;rstudio/keras&amp;quot;)library(keras)install_keras()查看 tensorflow 版本。使用的是 tensorflow 1.10.0 (有点落后，主要是懒得更新)。python 版本3.6
library(keras)library(reticulate) tensorflow::tf_config() ## TensorFlow v1.10.0 (C:\Users\User\ANACON~2\envs\R-TENS~1\lib\site-packages\keras\__init__.p)## Python v3.6 (C:\Users\User\Anaconda3\envs\r-tensorflow\python.exe)查看 keras 版本为2.</description>
    </item>
    
    <item>
      <title>在 Google Cloud 安装 Jupyter notebook</title>
      <link>/post/google-cloud-jupyter-notebook/</link>
      <pubDate>Sun, 23 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/google-cloud-jupyter-notebook/</guid>
      <description>1.成功注册谷歌云此次省略300字。具体申请教材请网上查找。流程比较简单，只需准备一个手机号码和信用卡。第一年免费使用。信用卡绑定不会扣费。
2.登录谷歌云建立GPU服务器2.1 申请 GPU额度目前谷歌需要申请GPU额度才能使用GPU。所以在开GPU服务前，需要用户申请GPU额度。步骤如下
IAM &amp;amp; admin - &amp;gt; Quotas选GPUEDIT QUOTA加GPU QUOTA -&amp;gt; submit2.2 开启GPU服务器Compute Engine - &amp;gt; VM instancesCREATE INSTANCESname,Region 自行选择;CPU个数，GPU个数自行选择。建议4+1Allow default access;Allow HTTP traffic;Allow HTTPS traffic;Network tags:rstudio系统选择 Ubuntu 18;disk size 100 GB3.开启防火墙VPC netword - &amp;gt; Firewall rulesCREATE FIREWALL RULETarget:All instances in the network;Source IP ranges:0.</description>
    </item>
    
    <item>
      <title>在 Google Cloud 安装 R studio server</title>
      <link>/post/google-cloud-r-studio-server/</link>
      <pubDate>Sun, 23 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/google-cloud-r-studio-server/</guid>
      <description>1.成功注册谷歌云此次省略300字。具体申请教材请网上查找。流程比较简单，只需准备一个手机号码和信用卡。第一年免费使用。信用卡绑定不会扣费。
2.登录谷歌云建立GPU服务器2.1 申请 GPU额度目前谷歌需要申请GPU额度才能使用GPU。所以在开GPU服务前，需要用户申请GPU额度。步骤如下
IAM &amp;amp; admin - &amp;gt; Quotas选GPUEDIT QUOTA加GPU QUOTA -&amp;gt; submit2.2 开启GPU服务器Compute Engine - &amp;gt; VM instancesCREATE INSTANCESname,Region 自行选择;CPU个数，GPU个数自行选择。建议4+1Allow default access;Allow HTTP traffic;Allow HTTPS traffic;Network tags:rstudio系统选择 Ubuntu 18;disk size 100 GB3.开启防火墙VPC netword - &amp;gt; Firewall rulesCREATE FIREWALL RULETarget:Specified target tags;Target tags:rstudio;Source IP ranges:0.</description>
    </item>
    
    <item>
      <title>Data Discovery:Global Plastic Waste</title>
      <link>/post/data-weekend-global-plastic-waste/</link>
      <pubDate>Sat, 22 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/data-weekend-global-plastic-waste/</guid>
      <description>PHOTOGRAPHS BY RANDY OLSON
开篇上海市垃圾分类立法 在
2019年7月1日起施行。个人混投垃圾最高可罚200元，单位混装混运最高可罚5万元。丢垃圾要分为4类:
可回收物:废纸张、废塑料、废玻璃制品、废金属、废织物等有害垃圾:废电池、废灯管、废药品、废油漆及其容器等湿垃圾:食材废料、剩菜剩饭、过期食品、瓜皮果核、花卉绿植等干垃圾:除可回收物、有害垃圾、湿垃圾以外的其它生活废弃物《上海市生活垃圾管理条例》同时规定:旅馆不得主动提供客房一次性日用品。餐饮服务不得主动提供一次性餐具。
packagelibrary(tidyverse)library(dplyr)library(scales)library(ggplot2)library(readr)library(janitor)library(ggthemes)theme_set(theme_light())导入数据coast_vs_waste &amp;lt;- read_csv(&amp;quot;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-05-21/coastal-population-vs-mismanaged-plastic.csv&amp;quot;)mismanaged_vs_gdp &amp;lt;- read_csv(&amp;quot;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-05-21/per-capita-mismanaged-plastic-waste-vs-gdp-per-capita.csv&amp;quot;)waste_vs_gdp &amp;lt;- read_csv(&amp;quot;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-05-21/per-capita-plastic-waste-vs-gdp-per-capita.csv&amp;quot;)# data source shttps://ourworldindata.org/plastic-pollutionglobal_plastics_production=read_csv(&amp;quot;https://raw.githubusercontent.com/TonyFly3000/kaggle/master/global-plastics-production.csv&amp;quot;)global_plastics_production## # A tibble: 66 x 4## Entity Code Year `Global plastics production (million tonnes) (ton~## &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;## 1 World OWID_WRL 1950 2000000## 2 World OWID_WRL 1951 2000000## 3 World OWID_WRL 1952 2000000## 4 World OWID_WRL 1953 3000000## 5 World OWID_WRL 1954 3000000## 6 World OWID_WRL 1955 4000000## 7 World OWID_WRL 1956 5000000## 8 World OWID_WRL 1957 5000000## 9 World OWID_WRL 1958 6000000## 10 World OWID_WRL 1959 7000000## # .</description>
    </item>
    
    <item>
      <title>eBay Baseball</title>
      <link>/post/ebay-baseball/</link>
      <pubDate>Fri, 21 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/ebay-baseball/</guid>
      <description></description>
    </item>
    
    <item>
      <title>June 2019 TFUG Shenzhen event:text classification Codelab</title>
      <link>/post/june-2019-tfug-shenzhen-event-wework/</link>
      <pubDate>Sat, 15 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/june-2019-tfug-shenzhen-event-wework/</guid>
      <description>TensorFlow text classification Codelab
活动行：https://www.huodongxing.com/event/5495492574500
Code:https://github.com/JayYip/deep-learning-nlp-notes/blob/master/colab-talk-shenzhen-0615/Colab-Practice.ipynb
PPT:https://github.com/JayYip/deep-learning-nlp-notes/blob/master/colab-talk-shenzhen-0615/TFUG-Colab-Talk.pdf</description>
    </item>
    
    <item>
      <title>Google Cloud Platform (GCP) Trainning by GDG</title>
      <link>/post/google-cloud-platform-gcp-trainning-by-gdg/</link>
      <pubDate>Fri, 31 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/google-cloud-platform-gcp-trainning-by-gdg/</guid>
      <description>GCP Fundamentals:Core Infrastructure Traininghttps://www.huodongxing.com/event/4490855305500
By Eefy LinGCP launchAlways good food at GDGCompletedCourse Slice:0_Course_Intro.pdf
1_Introducing_Google_Cloud_Platform.pdf
2_Getting_started_with_Google_Cloud_Platform.pdf
3_Virtual_Machines_in_the_Cloud.pdf
4_Storage_in_the_Cloud.pdf
5_Containers_in_the_Cloud.pdf
6_Applications_in_the_Cloud.pdf
7_Developing__Deploying__and_Monitoring_in_the_Cloud.pdf
8_Big_Data_and_Machine_Learning_in_the_Cloud.pdf
9_Summary_and_Review.pdf
</description>
    </item>
    
    <item>
      <title>2019 Q2 ebay Seller seminar</title>
      <link>/post/2019-q2-ebay-seller-seimnar-guangzhou-shenzhen/</link>
      <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019-q2-ebay-seller-seimnar-guangzhou-shenzhen/</guid>
      <description>2019 Q2 ebay Seller Seimnar @ Guangzhou and Shenzhen.jpg Coffee</description>
    </item>
    
    <item>
      <title>AI From the Data Center to the Edge Workshop by Intel</title>
      <link>/post/ai-from-the-data-center-to-the-edge-training-by-intel/</link>
      <pubDate>Sat, 18 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/ai-from-the-data-center-to-the-edge-training-by-intel/</guid>
      <description>AI From the Data Center to the Edge workshop by IntelStolen Car model Data set:http://vmmrdb.cecsresearch.org/
jupyter notebook:Part1-Exploratory_Data_Analysis
Part2-Training_InceptionV3
Part3-Model_Analysis
Part4-OpenVINO_Video_Inference
Inroduction to Tensorflow workshop by GDG Shanghaicalifornia_housing Data set:california_housing_train.csv
california_housing_test.csv
jupyter notebook:notebook_demo.ipynb
P0.ipynb
Peet’s Coffee</description>
    </item>
    
    <item>
      <title>Kyoto | 京都 Food Blog</title>
      <link>/post/kyoto/</link>
      <pubDate>Thu, 02 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/kyoto/</guid>
      <description>Location:library(leaflet)library(ggmap)location=geocode(&amp;quot;Kyoto&amp;quot;, source = &amp;quot;dsk&amp;quot;)lon=location$lonlat=location$latm &amp;lt;- leaflet()%&amp;gt;%addTiles() %&amp;gt;% # Add default OpenStreetMap map tilessetView(lng=lon, lat=lat, zoom = 08) %&amp;gt;%addMarkers(lng=lon, lat=lat, popup=&amp;quot;Kyoto&amp;quot;)m{&#34;x&#34;:{&#34;options&#34;:{&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}}},&#34;calls&#34;:[{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#34;,null,null,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false,&#34;attribution&#34;:&#34;&amp;copy; OpenStreetMap contributors, CC-BY-SA&#34;}]},{&#34;method&#34;:&#34;addMarkers&#34;,&#34;args&#34;:[35.02107,135.75385,null,null,null,{&#34;interactive&#34;:true,&#34;draggable&#34;:false,&#34;keyboard&#34;:true,&#34;title&#34;:&#34;&#34;,&#34;alt&#34;:&#34;&#34;,&#34;zIndexOffset&#34;:0,&#34;opacity&#34;:1,&#34;riseOnHover&#34;:false,&#34;riseOffset&#34;:250},&#34;Kyoto&#34;,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]}],&#34;setView&#34;:[[35.02107,135.75385],8,[]],&#34;limits&#34;:{&#34;lat&#34;:[35.02107,35.02107],&#34;lng&#34;:[135.75385,135.75385]}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}@ 千本鸟居
@ 伏見稻荷大社
黑毛和牛丼 @ Red Rock 地址:京都府京都市中京區鬆ケ枝町
白烧鳗鱼饭 @ 祇をん松乃 地址:京都府京都市東山区四条南座東4軒目
</description>
    </item>
    
    <item>
      <title>Osaka | 大阪 Food Blog</title>
      <link>/post/osaka-food-blog/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/osaka-food-blog/</guid>
      <description>Location:library(leaflet)library(ggmap)location=geocode(&amp;quot;Osaka&amp;quot;, source = &amp;quot;dsk&amp;quot;)lon=location$lonlat=location$latm &amp;lt;- leaflet()%&amp;gt;%addTiles() %&amp;gt;% # Add default OpenStreetMap map tilessetView(lng=lon, lat=lat, zoom = 08) %&amp;gt;%addMarkers(lng=lon, lat=lat, popup=&amp;quot;Osaka&amp;quot;)m{&#34;x&#34;:{&#34;options&#34;:{&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}}},&#34;calls&#34;:[{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#34;,null,null,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false,&#34;attribution&#34;:&#34;&amp;copy; OpenStreetMap contributors, CC-BY-SA&#34;}]},{&#34;method&#34;:&#34;addMarkers&#34;,&#34;args&#34;:[null,null,null,null,null,{&#34;interactive&#34;:true,&#34;draggable&#34;:false,&#34;keyboard&#34;:true,&#34;title&#34;:&#34;&#34;,&#34;alt&#34;:&#34;&#34;,&#34;zIndexOffset&#34;:0,&#34;opacity&#34;:1,&#34;riseOnHover&#34;:false,&#34;riseOffset&#34;:250},&#34;Osaka&#34;,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]}],&#34;setView&#34;:[[null,null],8,[]],&#34;limits&#34;:[]},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}双重幸福拉面 @ 花丸軒地址：大阪府大阪市中央区難波1-2-1
寿司 @ 天下の台所 大起水産 地址： 大阪府大阪市中央區難波 5-1-60
烤和牛饭@ 肉劇場 地址：大阪府大阪市中央区道頓堀2-2-2
手冲咖啡 @ 星乃珈琲店 地址：大阪府大阪市中央区南船場3-10-11 D+北心斎橋 2F
</description>
    </item>
    
    <item>
      <title>2019 BM outing @武夷山 | WUYI mountains</title>
      <link>/post/wuyi-mountains/</link>
      <pubDate>Thu, 28 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/wuyi-mountains/</guid>
      <description>Location:library(leaflet)library(ggmap)location=geocode(&amp;quot;WUYI&amp;quot;, source = &amp;quot;dsk&amp;quot;)lon=location$lonlat=location$latm &amp;lt;- leaflet()%&amp;gt;%addTiles() %&amp;gt;% # Add default OpenStreetMap map tilessetView(lng=lon, lat=lat, zoom = 08) %&amp;gt;%addMarkers(lng=lon, lat=lat, popup=&amp;quot;WUYI mountains&amp;quot;)m{&#34;x&#34;:{&#34;options&#34;:{&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}}},&#34;calls&#34;:[{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#34;,null,null,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false,&#34;attribution&#34;:&#34;&amp;copy; OpenStreetMap contributors, CC-BY-SA&#34;}]},{&#34;method&#34;:&#34;addMarkers&#34;,&#34;args&#34;:[27.70167,117.98917,null,null,null,{&#34;interactive&#34;:true,&#34;draggable&#34;:false,&#34;keyboard&#34;:true,&#34;title&#34;:&#34;&#34;,&#34;alt&#34;:&#34;&#34;,&#34;zIndexOffset&#34;:0,&#34;opacity&#34;:1,&#34;riseOnHover&#34;:false,&#34;riseOffset&#34;:250},&#34;WUYI mountains&#34;,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]}],&#34;setView&#34;:[[27.70167,117.98917],8,[]],&#34;limits&#34;:{&#34;lat&#34;:[27.70167,27.70167],&#34;lng&#34;:[117.98917,117.98917]}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}</description>
    </item>
    
    <item>
      <title>Bodypump &amp; Bodycombat</title>
      <link>/post/bodypump-bodycombat/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/bodypump-bodycombat/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Mar 2019  TFUG Shenzhen event@Wework</title>
      <link>/post/2019-tfug-event-shenzhen/</link>
      <pubDate>Sat, 16 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019-tfug-event-shenzhen/</guid>
      <description>Tensorflow user group first event @ Wework
活动行：https://www.huodongxing.com/event/2482903677300
活动PPT：https://github.com/TonyFly3000/TFUG_Shenzhen
微信公众号文章</description>
    </item>
    
    <item>
      <title>2019 Q1 ebay Seller seminar</title>
      <link>/post/2019q1-seller-seimnar/</link>
      <pubDate>Tue, 12 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019q1-seller-seimnar/</guid>
      <description>2019 Q1 ebay Seller Seimnar @ Guangzhou and Shenzhen&amp;amp; coffee</description>
    </item>
    
    <item>
      <title>Pydata HK meetup Feb2019</title>
      <link>/post/pydata-hk-meetup-feb2019/</link>
      <pubDate>Tue, 19 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/pydata-hk-meetup-feb2019/</guid>
      <description>https://www.meetup.com/PyData-Hong-Kong/events/258897818/
Making the Big Data ecosystem work together with Python: Apache Arrow, Spark, Flink, Beam, and Dask by Holden Karau
Cheess toastCheess noddle</description>
    </item>
    
    <item>
      <title>Happy Chinese New year 2019 : The year of PIG!</title>
      <link>/post/happy-chinese-new-year-2019-the-year-of-pig/</link>
      <pubDate>Mon, 04 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/happy-chinese-new-year-2019-the-year-of-pig/</guid>
      <description>HometownUpper Hill Shenzhen</description>
    </item>
    
    <item>
      <title>A/B testing with Google Analytics meetup</title>
      <link>/post/a-b-testing-with-google-analytics-meetup/</link>
      <pubDate>Sat, 19 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/a-b-testing-with-google-analytics-meetup/</guid>
      <description>A/B testing with Google Analytics and OptimiseHost by 55 analytic and Aftership@Techtemple.meetup:http://www.huodongxing.com/event/8474882293500
Summary:
Company should provide tailor made content to increase customer satisfaction,engagement and ROI
data value: opportunity-&amp;gt; data-&amp;gt; informaction-&amp;gt; solution-&amp;gt; decision
Google Analytics and Optimise can easily set up A/B testing:Set up KPI with Google AnalyticsSet up A/B testing with Google Optimisepaste code into your websiteget report from Google Optimiseco work space : Tech temple</description>
    </item>
    
    <item>
      <title>Mr Basketball team</title>
      <link>/post/mr-basketball-team/</link>
      <pubDate>Fri, 18 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/mr-basketball-team/</guid>
      <description>Mr Basketball team first game first win2019 target: Speed &amp;amp; Skill &amp;amp; Strength
Mr Basketball team annual dinner</description>
    </item>
    
    <item>
      <title>rstudio::conf 2019</title>
      <link>/post/rstudio-conf-2019/</link>
      <pubDate>Tue, 15 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/rstudio-conf-2019/</guid>
      <description>I segment the talk into following groups:Get,clean,visualize,model,present,other
Rstudio conference 2019 hosted during January 15 - 18 in Austin, TX
Rstudio conference 2020 will be hosted in San Francisco, California from January 27–30, 2020
Get:Databases using R: The latest - Edgar Ruizconnect with database with R in connection pane
Clean:Working with names and expressions in your tidy eval code - Lionel HenryLazy evaluation - Jenny BryanThe “tidy eval” framework is implemented in the rlang package and is rolling out in packages across the tidyverse and beyond.</description>
    </item>
    
    <item>
      <title>Who use R</title>
      <link>/post/who-use-r/</link>
      <pubDate>Sun, 06 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/who-use-r/</guid>
      <description>PurposeUsing R and R package download volume to estimate how many people are using R in the world.
There are two data sources:
JSON API data from https://cranlogs.r-pkg.org/
data from package cranlogs which wrap data from https://cranlogs.r-pkg.org/
CSV data from http://cran-logs.rstudio.com/
ConclusionEstimate total 1-2 milion R user around the world 35% from US and 5% from China with 20% YOY grow.</description>
    </item>
    
    <item>
      <title>Happy Christmas 2018</title>
      <link>/post/christmas-2018/</link>
      <pubDate>Tue, 25 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/christmas-2018/</guid>
      <description>Christmas party @ShenzhenChristmas party @ShanghaiChristmas gift@Jamaica Blue</description>
    </item>
    
    <item>
      <title>Understanding Colors</title>
      <link>/post/understanding-colors/</link>
      <pubDate>Fri, 14 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/understanding-colors/</guid>
      <description>Understanding Colors by blenderguru.comcolor brewerggplot# color brewer:Qualitative (qual)library(ggplot2)library(dplyr)data002=sample_n(diamonds,1000)ggplot(data002,aes(x=carat, y=price, color=clarity)) +geom_point() +scale_color_brewer(type=&amp;#39;qual&amp;#39;)# color brewer:Sequential (seq) library(ggplot2)library(dplyr)data002=sample_n(diamonds,1000)ggplot(data002,aes(x=carat, y=price, color=clarity)) +geom_point() +scale_color_brewer(type=&amp;#39;seq&amp;#39;)# color brewer:Diverging (div)library(ggplot2)library(dplyr)data002=sample_n(diamonds,1000)ggplot(data002,aes(x=carat, y=price, color=clarity)) +geom_point() +scale_color_brewer(type=&amp;#39;div&amp;#39;)plotly# color brewer:RdBulibrary(plotly)library(RColorBrewer)library(dplyr)data002=sample_n(diamonds,1000)plot_ly(data=data002,x=~carat, y=~price, color=~clarity,colors = brewer.</description>
    </item>
    
    <item>
      <title>What&#39;s new on Rstudio 1.2</title>
      <link>/post/what-s-new-on-rstudio-1-2/</link>
      <pubDate>Wed, 05 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/what-s-new-on-rstudio-1-2/</guid>
      <description>Rstudio 1.2The RStudio 1.2 Preview Release,available at 2018-10-02.
1.New Rstudio logo(Rstudio 1.2)
(Rstudio 1.1)
2.Not longer support 32-bit base R(Rstudio 1.2 only support 64-bit base R)
(Rstudio 1.1 can choose 32-bit or 64 bit base R)
3.Python support1.Support line-by-line execution of Python code
2.When working on Rmarkdwon ,1.2 now able to call python variable on R environment or call R variable on python environment</description>
    </item>
    
    <item>
      <title>TED talk:Different between male and female</title>
      <link>/post/different-between-male-and-female/</link>
      <pubDate>Tue, 04 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/different-between-male-and-female/</guid>
      <description>TED talk:
male create serotonin(血清素) 52% faster then female which relate to emotion,motivation ,memory and sleep. That why male are easier to forget unhappy thing.
on average , each day female speak 20K words and male speak 7k words. Along with the growth of the age, female even speak more and male even speak less.
</description>
    </item>
    
    <item>
      <title>蔡瀾画</title>
      <link>/post/cailan-painting/</link>
      <pubDate>Fri, 30 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/cailan-painting/</guid>
      <description>雙鬢斑斑不悔今生狂妄欲上青天攬明月From 蔡瀾Blog：https://bobostory.wordpress.com/
</description>
    </item>
    
    <item>
      <title>(SQL vs NoSQL) or (MySQL vs MongoDB)</title>
      <link>/post/hadoop-and-relational-database-video/</link>
      <pubDate>Thu, 29 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/hadoop-and-relational-database-video/</guid>
      <description>SQL vs NO SQLUnderstanding MongoDBRDBMS vs Hadoop</description>
    </item>
    
    <item>
      <title>R Conference GuangZhou</title>
      <link>/post/r-conference-gz/</link>
      <pubDate>Sun, 25 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/r-conference-gz/</guid>
      <description>R conference Guangzhou @ SUN YAT-SEN UNIVERSITYBack to school:
topic:
1.data visilztion2.AI in fintech3.Shiny development4.R package development
Guangzhou : the capital of delicious foodat A 60+ year old Guangzhou style Rice noodle roll shop (@ 银记)：
Chaozhou fish ball noodles,all self make fish ball/beef ball/fish slices/fish dumpling/fried fish skinsComparing with fish ball noodles in HK(@ 三才魚蛋粉麵)
</description>
    </item>
    
    <item>
      <title>MIT:Talk Data to your Organization</title>
      <link>/post/talk-data-to-your-organization/</link>
      <pubDate>Sat, 24 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/talk-data-to-your-organization/</guid>
      <description>Talk Data to your Organization by Ben Shields at MIT Sloan Sports Analytics Conference
Part 1Part 21.Define your objectiveWhat action do you want your audiences to talk?
2.Analyze your audiencesCredibiltyFamiliarityBiaswhat in it for them
3.Strucure your messageBottom linerationalecall to action
4.Connect through contentword/number/table/chart
5.Choose your channelpresentation/slideument/document
6.Adpt your visual
</description>
    </item>
    
    <item>
      <title>JiGuang Dev day 极光开发日 2018</title>
      <link>/post/jiguang-dev-day/</link>
      <pubDate>Sat, 17 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/jiguang-dev-day/</guid>
      <description>Selfie and free food:Text mining:Picture recognition:Data team Org:
JG stock price with plotly:library(quantmod)library(plotly)getSymbols(&amp;quot;JG&amp;quot;)## [1] &amp;quot;JG&amp;quot;JG_data=as.data.frame(JG)JG_data$time &amp;lt;- rownames(JG_data)JG_data=JG_data%&amp;gt;%filter(time&amp;gt;=&amp;#39;2018-06-01&amp;#39;)p &amp;lt;- plot_ly(JG_data, x = ~time, y = ~JG.Close, type = &amp;#39;scatter&amp;#39;, mode = &amp;#39;lines+markers&amp;#39;)p{&#34;x&#34;:{&#34;visdat&#34;:{&#34;38081ec1108&#34;:[&#34;function () &#34;,&#34;plotlyVisDat&#34;]},&#34;cur_data&#34;:&#34;38081ec1108&#34;,&#34;attrs&#34;:{&#34;38081ec1108&#34;:{&#34;x&#34;:{},&#34;y&#34;:{},&#34;mode&#34;:&#34;lines+markers&#34;,&#34;alpha_stroke&#34;:1,&#34;sizes&#34;:[10,100],&#34;spans&#34;:[1,20],&#34;type&#34;:&#34;scatter&#34;}},&#34;layout&#34;:{&#34;margin&#34;:{&#34;b&#34;:40,&#34;l&#34;:60,&#34;t&#34;:25,&#34;r&#34;:10},&#34;xaxis&#34;:{&#34;domain&#34;:[0,1],&#34;automargin&#34;:true,&#34;title&#34;:&#34;time&#34;,&#34;type&#34;:&#34;category&#34;,&#34;categoryorder&#34;:&#34;array&#34;,&#34;categoryarray&#34;:[&#34;2018-07-26&#34;,&#34;2018-07-27&#34;,&#34;2018-07-30&#34;,&#34;2018-07-31&#34;,&#34;2018-08-01&#34;,&#34;2018-08-02&#34;,&#34;2018-08-03&#34;,&#34;2018-08-06&#34;,&#34;2018-08-07&#34;,&#34;2018-08-08&#34;,&#34;2018-08-09&#34;,&#34;2018-08-10&#34;,&#34;2018-08-13&#34;,&#34;2018-08-14&#34;,&#34;2018-08-15&#34;,&#34;2018-08-16&#34;,&#34;2018-08-17&#34;,&#34;2018-08-20&#34;,&#34;2018-08-21&#34;,&#34;2018-08-22&#34;,&#34;2018-08-23&#34;,&#34;2018-08-24&#34;,&#34;2018-08-27&#34;,&#34;2018-08-28&#34;,&#34;2018-08-29&#34;,&#34;2018-08-30&#34;,&#34;2018-08-31&#34;,&#34;2018-09-04&#34;,&#34;2018-09-05&#34;,&#34;2018-09-06&#34;,&#34;2018-09-07&#34;,&#34;2018-09-10&#34;,&#34;2018-09-11&#34;,&#34;2018-09-12&#34;,&#34;2018-09-13&#34;,&#34;2018-09-14&#34;,&#34;2018-09-17&#34;,&#34;2018-09-18&#34;,&#34;2018-09-19&#34;,&#34;2018-09-20&#34;,&#34;2018-09-21&#34;,&#34;2018-09-24&#34;,&#34;2018-09-25&#34;,&#34;2018-09-26&#34;,&#34;2018-09-27&#34;,&#34;2018-09-28&#34;,&#34;2018-10-01&#34;,&#34;2018-10-02&#34;,&#34;2018-10-03&#34;,&#34;2018-10-04&#34;,&#34;2018-10-05&#34;,&#34;2018-10-08&#34;,&#34;2018-10-09&#34;,&#34;2018-10-10&#34;,&#34;2018-10-11&#34;,&#34;2018-10-12&#34;,&#34;2018-10-15&#34;,&#34;2018-10-16&#34;,&#34;2018-10-17&#34;,&#34;2018-10-18&#34;,&#34;2018-10-19&#34;,&#34;2018-10-22&#34;,&#34;2018-10-23&#34;,&#34;2018-10-24&#34;,&#34;2018-10-25&#34;,&#34;2018-10-26&#34;,&#34;2018-10-29&#34;,&#34;2018-10-30&#34;,&#34;2018-10-31&#34;,&#34;2018-11-01&#34;,&#34;2018-11-02&#34;,&#34;2018-11-05&#34;,&#34;2018-11-06&#34;,&#34;2018-11-07&#34;,&#34;2018-11-08&#34;,&#34;2018-11-09&#34;,&#34;2018-11-12&#34;,&#34;2018-11-13&#34;,&#34;2018-11-14&#34;,&#34;2018-11-15&#34;,&#34;2018-11-16&#34;,&#34;2018-11-19&#34;,&#34;2018-11-20&#34;,&#34;2018-11-21&#34;,&#34;2018-11-23&#34;,&#34;2018-11-26&#34;,&#34;2018-11-27&#34;,&#34;2018-11-28&#34;,&#34;2018-11-29&#34;,&#34;2018-11-30&#34;]},&#34;yaxis&#34;:{&#34;domain&#34;:[0,1],&#34;automargin&#34;:true,&#34;title&#34;:&#34;JG.Close&#34;},&#34;hovermode&#34;:&#34;closest&#34;,&#34;showlegend&#34;:false},&#34;source&#34;:&#34;A&#34;,&#34;config&#34;:{&#34;modeBarButtonsToAdd&#34;:[{&#34;name&#34;:&#34;Collaborate&#34;,&#34;icon&#34;:{&#34;width&#34;:1000,&#34;ascent&#34;:500,&#34;descent&#34;:-50,&#34;path&#34;:&#34;M487 375c7-10 9-23 5-36l-79-259c-3-12-11-23-22-31-11-8-22-12-35-12l-263 0c-15 0-29 5-43 15-13 10-23 23-28 37-5 13-5 25-1 37 0 0 0 3 1 7 1 5 1 8 1 11 0 2 0 4-1 6 0 3-1 5-1 6 1 2 2 4 3 6 1 2 2 4 4 6 2 3 4 5 5 7 5 7 9 16 13 26 4 10 7 19 9 26 0 2 0 5 0 9-1 4-1 6 0 8 0 2 2 5 4 8 3 3 5 5 5 7 4 6 8 15 12 26 4 11 7 19 7 26 1 1 0 4 0 9-1 4-1 7 0 8 1 2 3 5 6 8 4 4 6 6 6 7 4 5 8 13 13 24 4 11 7 20 7 28 1 1 0 4 0 7-1 3-1 6-1 7 0 2 1 4 3 6 1 1 3 4 5 6 2 3 3 5 5 6 1 2 3 5 4 9 2 3 3 7 5 10 1 3 2 6 4 10 2 4 4 7 6 9 2 3 4 5 7 7 3 2 7 3 11 3 3 0 8 0 13-1l0-1c7 2 12 2 14 2l218 0c14 0 25-5 32-16 8-10 10-23 6-37l-79-259c-7-22-13-37-20-43-7-7-19-10-37-10l-248 0c-5 0-9-2-11-5-2-3-2-7 0-12 4-13 18-20 41-20l264 0c5 0 10 2 16 5 5 3 8 6 10 11l85 282c2 5 2 10 2 17 7-3 13-7 17-13z m-304 0c-1-3-1-5 0-7 1-1 3-2 6-2l174 0c2 0 4 1 7 2 2 2 4 4 5 7l6 18c0 3 0 5-1 7-1 1-3 2-6 2l-173 0c-3 0-5-1-8-2-2-2-4-4-4-7z m-24-73c-1-3-1-5 0-7 2-2 3-2 6-2l174 0c2 0 5 0 7 2 3 2 4 4 5 7l6 18c1 2 0 5-1 6-1 2-3 3-5 3l-174 0c-3 0-5-1-7-3-3-1-4-4-5-6z&#34;</description>
    </item>
    
    <item>
      <title>Pycon China Shenzhen 2018</title>
      <link>/post/pycon-china-shenzhen-2018/</link>
      <pubDate>Sat, 27 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/pycon-china-shenzhen-2018/</guid>
      <description>我的第一次 Pycon 。果然大开眼界。程序员们都养起了茂密的发根，脱下了格子战衣。五湖四海而来，共聚一堂。说起了相声，打起了太极，聊起了梦想。
http://cn.pycon.org/2018/en/city_shenzhen.html</description>
    </item>
    
    <item>
      <title>Pydata HK meetup Oct</title>
      <link>/post/pydata-hk-meetup-oct/</link>
      <pubDate>Thu, 25 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/pydata-hk-meetup-oct/</guid>
      <description>Second Pydata meetup @The Hong Kong Polytechnic University Z409:Hands-on with Data Visuzliation by Mr. Darren Chiu (https://www.linkedin.com/in/darrenchiu/)
How can we know that a machine learning algorithm classifies and detects faults well? by Dr. Howard Cheung (https://www.linkedin.com/in/howard-cheung-energy-research/)
https://www.meetup.com/PyData-Hong-Kong/events/255545312/
</description>
    </item>
    
    <item>
      <title>三亚 | Sanya</title>
      <link>/post/sanya/</link>
      <pubDate>Wed, 10 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/sanya/</guid>
      <description>Location:library(leaflet)library(ggmap)location=geocode(&amp;quot;Sanya&amp;quot;, source = &amp;quot;dsk&amp;quot;)lon=location$lonlat=location$latm &amp;lt;- leaflet()%&amp;gt;%addTiles() %&amp;gt;% # Add default OpenStreetMap map tilessetView(lng=lon, lat=lat, zoom = 05) %&amp;gt;%addMarkers(lng=lon, lat=lat, popup=&amp;quot;Sanya&amp;quot;)m{&#34;x&#34;:{&#34;options&#34;:{&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}}},&#34;calls&#34;:[{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#34;,null,null,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false,&#34;attribution&#34;:&#34;&amp;copy; OpenStreetMap contributors, CC-BY-SA&#34;}]},{&#34;method&#34;:&#34;addMarkers&#34;,&#34;args&#34;:[18.24306,109.505,null,null,null,{&#34;interactive&#34;:true,&#34;draggable&#34;:false,&#34;keyboard&#34;:true,&#34;title&#34;:&#34;&#34;,&#34;alt&#34;:&#34;&#34;,&#34;zIndexOffset&#34;:0,&#34;opacity&#34;:1,&#34;riseOnHover&#34;:false,&#34;riseOffset&#34;:250},&#34;Sanya&#34;,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]}],&#34;setView&#34;:[[18.24306,109.505],5,[]],&#34;limits&#34;:{&#34;lat&#34;:[18.24306,18.24306],&#34;lng&#34;:[109.505,109.505]}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}ebay 3rd outingmusic</description>
    </item>
    
    <item>
      <title>Pydata HK meetup</title>
      <link>/post/pydata-hk-meetup/</link>
      <pubDate>Thu, 20 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/pydata-hk-meetup/</guid>
      <description>My first Pydata meetup @The Hong Kong Polytechnic University:Event:https://www.meetup.com/PyData-Hong-Kong/events/254406736/
Discovering Frequent Patterns in Time Series through Unsupervised Data Mining Techniques: the Case of the Energy Profiling in Buildings by Engineer Marco Savino Piscitelli
Write Better Python Code by Mr. Anthony Chiu
</description>
    </item>
    
    <item>
      <title>Capital of statistic meetup at Shanghai</title>
      <link>/post/shanghai-seller-seminar-conference/</link>
      <pubDate>Sun, 09 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/shanghai-seller-seminar-conference/</guid>
      <description>Capital of statistic meetup at Shanghaihttp://2018shanghaisalon-5.eventdove.com/
Topic:
1.Spark
2.Genetic algorithm
Starbucks Reserve Roastery Shanghai</description>
    </item>
    
    <item>
      <title>【數字‧你懂的】從蘋果iPhone看美中貿易逆差</title>
      <link>/post/data-you-know-iphone/</link>
      <pubDate>Tue, 04 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/data-you-know-iphone/</guid>
      <description>Please advise to remove immediately if any infringement caused
Apple become the first US company with market cap &amp;gt;1T USD after a strong 2018Q3 earning when stock price go up to $200 per sharePetroChina is the first company market cap &amp;gt;1T USD at 2007 but it decrease to 200B until todayChina export 61M iphones worth $15B to US in 2017 which contribute 5% of total US-China trade deficit $375B$1000 iphoneX manufacture cost is $350 and 5% of it contribute by China ,mainly battery and assemblyReferencehttps://www.</description>
    </item>
    
    <item>
      <title>How AI can save our humanity by Kai-Fu Lee | 李开复：人工智能将拯救人类</title>
      <link>/post/how-ai-can-save-our-humanity-by-kai-fu-lee/</link>
      <pubDate>Sun, 02 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/how-ai-can-save-our-humanity-by-kai-fu-lee/</guid>
      <description>Kai-Fu Lee presented TED talk at Aug13 2018.
US invent and China applyChina 2017 18 Trillon USD transaction was made by mobile payment bigger than total China 2017 GDP ,13 Trillon.</description>
    </item>
    
    <item>
      <title>Decision Tree model in python</title>
      <link>/post/decision-tree-model-in-python/</link>
      <pubDate>Sat, 01 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/decision-tree-model-in-python/</guid>
      <description>import pacakges and load iris dataset
from sklearn.datasets import load_irisfrom sklearn.model_selection import train_test_splitfrom sklearn import treefrom sklearn.metrics import accuracy_scoreiris = load_iris()print (iris.feature_names) # metadata: names of the features## [&amp;#39;sepal length (cm)&amp;#39;, &amp;#39;sepal width (cm)&amp;#39;, &amp;#39;petal length (cm)&amp;#39;, &amp;#39;petal width (cm)&amp;#39;]print (iris.target_names) # metadata: names of the different types of flowers## [&amp;#39;setosa&amp;#39; &amp;#39;versicolor&amp;#39; &amp;#39;virginica&amp;#39;]X = iris.data # featuresy = iris.target # labelsX_train is train features and X_test is test features</description>
    </item>
    
    <item>
      <title>KNN model in python</title>
      <link>/post/knn-model-in-python/</link>
      <pubDate>Sat, 01 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/knn-model-in-python/</guid>
      <description>1.Get:import pacakges and load iris dataset
from sklearn.datasets import load_irisfrom sklearn.model_selection import train_test_splitfrom sklearn.neighbors import KNeighborsClassifierfrom sklearn.metrics import accuracy_scoreiris = load_iris()2.CleanX_train is train features and X_test is test features.y_train is train label and y_test is test label.with 0.3 splict, we have 70% obs(105) for training and 30% obs(45) for testing.
print (iris.feature_names) # metadata: names of the features## [&amp;#39;sepal length (cm)&amp;#39;, &amp;#39;sepal width (cm)&amp;#39;, &amp;#39;petal length (cm)&amp;#39;, &amp;#39;petal width (cm)&amp;#39;]print (iris.</description>
    </item>
    
    <item>
      <title>Machine Learning over Coffee with Josh Gordon</title>
      <link>/post/machine-learning-over-coffee-with-josh-gordon/</link>
      <pubDate>Thu, 02 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/machine-learning-over-coffee-with-josh-gordon/</guid>
      <description></description>
    </item>
    
    <item>
      <title>How Overnight Shipping Works</title>
      <link>/post/how-overnight-shipping-works/</link>
      <pubDate>Wed, 01 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/how-overnight-shipping-works/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Tensorflow in Python系列(1) :数字图片分类 MNIST image classification</title>
      <link>/post/tensorflow-in-python-1-mnist-image-classification/</link>
      <pubDate>Mon, 30 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/tensorflow-in-python-1-mnist-image-classification/</guid>
      <description>开篇Tensorflow in Python 系列，将分享如何使用Python语言在Tensorflow/Keras 框架中训练深度学习模型。MNIST 全称为 Modified National Institute of Standards and Technology。这个名词一点也不重要。MNIST 数据为 7万张（6万张训练+1万张测试） 0-9的手写数字图片安装 Python 和 Anaconda此次省略300字。建议使用云计算平台。如Kaggle Kernel/Google Codelab/Google Cloud 等
可参考【在 Google Cloud 安装 jupyter notebook】： https://tduan.netlify.com/post/google-cloud-jupyter-notebook/
安装 tensorflow/keras package如果你的计算环境有GPU,可以安装GPU版本(tensorflow-gpu==2.0.0-beta1)
!pip install tensorflow==2.0.0-beta1查看 tensorflow 版本。
!pip install tensorflow==2.0.0-beta1import tensorflow as tffrom tensorflow import kerasprint(tf.__version__)1.导入数据导入4个数据集，分别为：
x_train: 6万张训练数字图片y_train： 6万个训练数字0-9标签x_test： 1万张测试数字图片y_test： 1万个测试数字0-9标签为什么有4个数据集 ?</description>
    </item>
    
    <item>
      <title>Tensorflow in R 系列(3) : 房价预测 Boston housing price </title>
      <link>/post/tensorflow-in-r-3-boston-housing-price/</link>
      <pubDate>Mon, 23 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/tensorflow-in-r-3-boston-housing-price/</guid>
      <description>开篇Tensorflow in R 系列，将分享如何使用R语言在Tensorflow/Keras 框架中训练深度学习模型。上一篇讲了如果使用深度神经网络模型来识别图片中的数字本文将介绍如何使用卷积神经网络模型（convolutional neural network）来识别图片中的时装分类Load packagelibrary(keras)library(tidyverse)library(tibble)library(ggplot2)library(tfestimators)library(ggcorrplot)1.导入数据导入4个数据集，分别为：
x_train: 6万张训练时装图片y_train： 6万个训练时装0-9标签,每个数字代表1种时装x_test： 1万张测试时装图片y_test： 1万个测试时装0-9标签,每个数字代表1种时装boston_housing &amp;lt;- dataset_boston_housing()c(train_data, train_labels) %&amp;lt;-% boston_housing$trainc(test_data, test_labels) %&amp;lt;-% boston_housing$test2.数据探索library(tibble)column_names &amp;lt;- c(&amp;#39;CRIM&amp;#39;, &amp;#39;ZN&amp;#39;, &amp;#39;INDUS&amp;#39;, &amp;#39;CHAS&amp;#39;, &amp;#39;NOX&amp;#39;, &amp;#39;RM&amp;#39;, &amp;#39;AGE&amp;#39;, &amp;#39;DIS&amp;#39;, &amp;#39;RAD&amp;#39;, &amp;#39;TAX&amp;#39;, &amp;#39;PTRATIO&amp;#39;, &amp;#39;B&amp;#39;, &amp;#39;LSTAT&amp;#39;)train_df &amp;lt;- as_tibble(train_data)colnames(train_df) &amp;lt;- column_namestrain_df## # A tibble: 404 x 13## CRIM ZN INDUS CHAS NOX RM AGE DIS RAD TAX PTRATIO## &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;## 1 1.</description>
    </item>
    
    <item>
      <title>서울 | Seoul</title>
      <link>/post/seoul/</link>
      <pubDate>Thu, 03 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/seoul/</guid>
      <description>Location:library(leaflet)library(ggmap)#location=geocode( &amp;quot;Seoul&amp;quot; )lon=127.00175lat=37.53555m &amp;lt;- leaflet()%&amp;gt;%addTiles() %&amp;gt;% # Add default OpenStreetMap map tilessetView(lng=lon, lat=lat, zoom = 05) %&amp;gt;%addMarkers(lng=lon, lat=lat, popup=&amp;quot;Seoul&amp;quot;)m{&#34;x&#34;:{&#34;options&#34;:{&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}}},&#34;calls&#34;:[{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#34;,null,null,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false,&#34;attribution&#34;:&#34;&amp;copy; OpenStreetMap contributors, CC-BY-SA&#34;}]},{&#34;method&#34;:&#34;addMarkers&#34;,&#34;args&#34;:[37.53555,127.00175,null,null,null,{&#34;interactive&#34;:true,&#34;draggable&#34;:false,&#34;keyboard&#34;:true,&#34;title&#34;:&#34;&#34;,&#34;alt&#34;:&#34;&#34;,&#34;zIndexOffset&#34;:0,&#34;opacity&#34;:1,&#34;riseOnHover&#34;:false,&#34;riseOffset&#34;:250},&#34;Seoul&#34;,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]}],&#34;setView&#34;:[[37.53555,127.00175],5,[]],&#34;limits&#34;:{&#34;lat&#34;:[37.53555,37.53555],&#34;lng&#34;:[127.00175,127.00175]}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}K POP at the AirportGinseng Chicken SoupA TWOSOME PLACEvery nice coffee shop.
Korean BBQ beefShake Shack</description>
    </item>
    
    <item>
      <title>臺北 | Taipei</title>
      <link>/post/taipei/</link>
      <pubDate>Tue, 01 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/taipei/</guid>
      <description>Location:library(leaflet)library(ggmap)#location=geocode( &amp;quot;Taipei&amp;quot; )lon=121.53363 lat=25.01801m &amp;lt;- leaflet()%&amp;gt;%addTiles() %&amp;gt;% # Add default OpenStreetMap map tilessetView(lng=lon, lat=lat, zoom = 05) %&amp;gt;%addMarkers(lng=lon, lat=lat, popup=&amp;quot;Taipei&amp;quot;)m{&#34;x&#34;:{&#34;options&#34;:{&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}}},&#34;calls&#34;:[{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#34;,null,null,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false,&#34;attribution&#34;:&#34;&amp;copy; OpenStreetMap contributors, CC-BY-SA&#34;}]},{&#34;method&#34;:&#34;addMarkers&#34;,&#34;args&#34;:[25.01801,121.53363,null,null,null,{&#34;interactive&#34;:true,&#34;draggable&#34;:false,&#34;keyboard&#34;:true,&#34;title&#34;:&#34;&#34;,&#34;alt&#34;:&#34;&#34;,&#34;zIndexOffset&#34;:0,&#34;opacity&#34;:1,&#34;riseOnHover&#34;:false,&#34;riseOffset&#34;:250},&#34;Taipei&#34;,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]}],&#34;setView&#34;:[[25.01801,121.53363],5,[]],&#34;limits&#34;:{&#34;lat&#34;:[25.01801,25.01801],&#34;lng&#34;:[121.53363,121.53363]}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}ArrivalOn the License Plate, it say Taiwan provinceThe Best beef noodleNationalist Party of China</description>
    </item>
    
    <item>
      <title>TensorFlow Dev Summit 2018</title>
      <link>/post/tensorflow-dev-summit-2018/</link>
      <pubDate>Fri, 30 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/tensorflow-dev-summit-2018/</guid>
      <description>TensorFlow Dev Summit 2018Full playlist:
https://www.youtube.com/playlist?list=PLQY2H8rRoyvxjVx3zfw4vA4cvlKogyLNN
</description>
    </item>
    
    <item>
      <title>rstudio::conf 2018</title>
      <link>/post/rstudio-conf-2018/</link>
      <pubDate>Fri, 02 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/rstudio-conf-2018/</guid>
      <description>I segment the talk into following groups:Get,clean,visualize,model,present,other
Rstudio conference 2018 hosted during January 15 - 18 in Austin, TX
Get:Clean:Visualize:Model:Machine Learning with R and TensorFlow - J.J. ALLAIREReinforcement learning in Minecraft with CNTK-R – Ali-Kazim ZaidiPresent:Other:</description>
    </item>
    
    <item>
      <title>Singapore</title>
      <link>/post/singapore/</link>
      <pubDate>Fri, 12 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/singapore/</guid>
      <description>Location:library(leaflet)library(ggmap)#location=geocode( &amp;quot;Singapore&amp;quot; )lon=103.81984lat=1.35208m &amp;lt;- leaflet()%&amp;gt;%addTiles() %&amp;gt;% # Add default OpenStreetMap map tilessetView(lng=lon, lat=lat, zoom = 05) %&amp;gt;%addMarkers(lng=lon, lat=lat, popup=&amp;quot;Singapore&amp;quot;)m{&#34;x&#34;:{&#34;options&#34;:{&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}}},&#34;calls&#34;:[{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#34;,null,null,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false,&#34;attribution&#34;:&#34;&amp;copy; OpenStreetMap contributors, CC-BY-SA&#34;}]},{&#34;method&#34;:&#34;addMarkers&#34;,&#34;args&#34;:[1.35208,103.81984,null,null,null,{&#34;interactive&#34;:true,&#34;draggable&#34;:false,&#34;keyboard&#34;:true,&#34;title&#34;:&#34;&#34;,&#34;alt&#34;:&#34;&#34;,&#34;zIndexOffset&#34;:0,&#34;opacity&#34;:1,&#34;riseOnHover&#34;:false,&#34;riseOffset&#34;:250},&#34;Singapore&#34;,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]}],&#34;setView&#34;:[[1.35208,103.81984],5,[]],&#34;limits&#34;:{&#34;lat&#34;:[1.35208,1.35208],&#34;lng&#34;:[103.81984,103.81984]}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}Andrews Wedding:</description>
    </item>
    
    <item>
      <title>東京 | Tokyo</title>
      <link>/post/tokyo/</link>
      <pubDate>Thu, 30 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/tokyo/</guid>
      <description>Location:library(leaflet)library(ggmap)#location=geocode( &amp;quot;Tokyo&amp;quot; )lon=139.29477lat=34.22558m &amp;lt;- leaflet()%&amp;gt;%addTiles() %&amp;gt;% # Add default OpenStreetMap map tilessetView(lng=lon, lat=lat, zoom = 05) %&amp;gt;%addMarkers(lng=lon, lat=lat, popup=&amp;quot;Tokyo&amp;quot;)m{&#34;x&#34;:{&#34;options&#34;:{&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}}},&#34;calls&#34;:[{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#34;,null,null,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false,&#34;attribution&#34;:&#34;&amp;copy; OpenStreetMap contributors, CC-BY-SA&#34;}]},{&#34;method&#34;:&#34;addMarkers&#34;,&#34;args&#34;:[34.22558,139.29477,null,null,null,{&#34;interactive&#34;:true,&#34;draggable&#34;:false,&#34;keyboard&#34;:true,&#34;title&#34;:&#34;&#34;,&#34;alt&#34;:&#34;&#34;,&#34;zIndexOffset&#34;:0,&#34;opacity&#34;:1,&#34;riseOnHover&#34;:false,&#34;riseOffset&#34;:250},&#34;Tokyo&#34;,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]}],&#34;setView&#34;:[[34.22558,139.29477],5,[]],&#34;limits&#34;:{&#34;lat&#34;:[34.22558,34.22558],&#34;lng&#34;:[139.29477,139.29477]}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}</description>
    </item>
    
    <item>
      <title>重庆 | ChongQing</title>
      <link>/post/chongqing/</link>
      <pubDate>Thu, 26 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/chongqing/</guid>
      <description>Location:library(leaflet)library(ggmap)#location=geocode( &amp;quot;ChongQing&amp;quot; )lon=106.54793lat=29.55513m &amp;lt;- leaflet()%&amp;gt;%addTiles() %&amp;gt;% # Add default OpenStreetMap map tilessetView(lng=lon, lat=lat, zoom = 05) %&amp;gt;%addMarkers(lng=lon, lat=lat, popup=&amp;quot;2017 ebay outing ChongQing&amp;quot;)m{&#34;x&#34;:{&#34;options&#34;:{&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}}},&#34;calls&#34;:[{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#34;,null,null,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false,&#34;attribution&#34;:&#34;&amp;copy; OpenStreetMap contributors, CC-BY-SA&#34;}]},{&#34;method&#34;:&#34;addMarkers&#34;,&#34;args&#34;:[29.55513,106.54793,null,null,null,{&#34;interactive&#34;:true,&#34;draggable&#34;:false,&#34;keyboard&#34;:true,&#34;title&#34;:&#34;&#34;,&#34;alt&#34;:&#34;&#34;,&#34;zIndexOffset&#34;:0,&#34;opacity&#34;:1,&#34;riseOnHover&#34;:false,&#34;riseOffset&#34;:250},&#34;2017 ebay outing ChongQing&#34;,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]}],&#34;setView&#34;:[[29.55513,106.54793],5,[]],&#34;limits&#34;:{&#34;lat&#34;:[29.55513,29.55513],&#34;lng&#34;:[106.54793,106.54793]}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}My Second group photo in ebay family:</description>
    </item>
    
    <item>
      <title>Hà Nội | Hanoi</title>
      <link>/post/hanoi/</link>
      <pubDate>Sun, 01 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/hanoi/</guid>
      <description>Location:library(leaflet)library(ggmap)#location=geocode( &amp;quot;Hanoi&amp;quot; )lon=105.80835lat=21.02003m &amp;lt;- leaflet()%&amp;gt;%addTiles() %&amp;gt;% # Add default OpenStreetMap map tilessetView(lng=lon, lat=lat, zoom = 05) %&amp;gt;%addMarkers(lng=lon, lat=lat, popup=&amp;quot;Hanoi&amp;quot;)m{&#34;x&#34;:{&#34;options&#34;:{&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}}},&#34;calls&#34;:[{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#34;,null,null,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false,&#34;attribution&#34;:&#34;&amp;copy; OpenStreetMap contributors, CC-BY-SA&#34;}]},{&#34;method&#34;:&#34;addMarkers&#34;,&#34;args&#34;:[21.02003,105.80835,null,null,null,{&#34;interactive&#34;:true,&#34;draggable&#34;:false,&#34;keyboard&#34;:true,&#34;title&#34;:&#34;&#34;,&#34;alt&#34;:&#34;&#34;,&#34;zIndexOffset&#34;:0,&#34;opacity&#34;:1,&#34;riseOnHover&#34;:false,&#34;riseOffset&#34;:250},&#34;Hanoi&#34;,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]}],&#34;setView&#34;:[[21.02003,105.80835],5,[]],&#34;limits&#34;:{&#34;lat&#34;:[21.02003,21.02003],&#34;lng&#34;:[105.80835,105.80835]}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}coffeeEgg coffee @ The Giang Café and Coconut coffee @ Cong Caphe .Two are in my top 10 coffee list.
FoodStreet food is health and crazy good.</description>
    </item>
    
    <item>
      <title>Tensorflow in R 系列(2) :时装分类 Fashion-MNIST image classification</title>
      <link>/post/tensorflow-in-r-2-fashion-mnist-image-classification/</link>
      <pubDate>Wed, 28 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/tensorflow-in-r-2-fashion-mnist-image-classification/</guid>
      <description>开篇Tensorflow in R 系列，将分享如何使用R语言在Tensorflow/Keras 框架中训练深度学习模型。上一篇讲了如果使用深度神经网络模型来识别图片中的数字本文将介绍如何使用卷积神经网络模型（convolutional neural network）来识别图片中的时装分类1.导入数据导入4个数据集，分别为：
x_train: 6万张训练时装图片y_train： 6万个训练时装0-9标签,每个数字代表1种时装x_test： 1万张测试时装图片y_test： 1万个测试时装0-9标签,每个数字代表1种时装为什么有4个数据集 ?
带x的通常为特征(feature)。带y的为标签(label)。训练数据是用来训练模型。测试数据不参加建模，而是模型建立后是用来测试模型的效果。library(keras)fashion_mnist &amp;lt;- dataset_fashion_mnist()c(x_train, y_train) %&amp;lt;-% fashion_mnist$trainc(x_test, y_test) %&amp;lt;-% fashion_mnist$test这些图片长这个样.每个数字代表1种时装。比如0是T-shirt。9是Ankle boot。
par(mfcol=c(3,3))par(mar=c(0, 0, 1.5, 0), xaxs=&amp;#39;i&amp;#39;, yaxs=&amp;#39;i&amp;#39;)for (i in 1:9) { img &amp;lt;- x_train[i, , ]img &amp;lt;- t(apply(img, 2, rev)) image(1:28, 1:28, img, col = gray((0:255)/255), xaxt = &amp;#39;n&amp;#39;, yaxt = &amp;#39;n&amp;#39;,main = y_train[i])}2.</description>
    </item>
    
    <item>
      <title>TensorFlow Dev Summit 2017</title>
      <link>/post/tensorflow-dev-summit-2017/</link>
      <pubDate>Wed, 15 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/tensorflow-dev-summit-2017/</guid>
      <description>TensorFlow Dev Summit 2017Tensorflow 1.0 launchTensorflow support board ML .for exameple,K-means,SVM,Random Forestevent:https://events.withgoogle.com/tensorflow-dev-summit/
Full playlist:
https://www.youtube.com/watch?v=4n1AHvDvVvw
</description>
    </item>
    
    <item>
      <title>濟州島 | Jeju Island</title>
      <link>/post/jeju-island/</link>
      <pubDate>Sun, 25 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/jeju-island/</guid>
      <description>Location:library(leaflet)library(ggmap)#location=geocode( &amp;quot;Jeju Island&amp;quot; )lon=126.52431 lat=33.49478m &amp;lt;- leaflet()%&amp;gt;%addTiles() %&amp;gt;% # Add default OpenStreetMap map tilessetView(lng=lon, lat=lat, zoom = 05) %&amp;gt;%addMarkers(lng=lon, lat=lat, popup=&amp;quot;2016 ebay outing Jeju Island&amp;quot;)m{&#34;x&#34;:{&#34;options&#34;:{&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}}},&#34;calls&#34;:[{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#34;,null,null,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false,&#34;attribution&#34;:&#34;&amp;copy; OpenStreetMap contributors, CC-BY-SA&#34;}]},{&#34;method&#34;:&#34;addMarkers&#34;,&#34;args&#34;:[33.49478,126.52431,null,null,null,{&#34;interactive&#34;:true,&#34;draggable&#34;:false,&#34;keyboard&#34;:true,&#34;title&#34;:&#34;&#34;,&#34;alt&#34;:&#34;&#34;,&#34;zIndexOffset&#34;:0,&#34;opacity&#34;:1,&#34;riseOnHover&#34;:false,&#34;riseOffset&#34;:250},&#34;2016 ebay outing Jeju Island&#34;,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]}],&#34;setView&#34;:[[33.49478,126.52431],5,[]],&#34;limits&#34;:{&#34;lat&#34;:[33.49478,33.49478],&#34;lng&#34;:[126.52431,126.52431]}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}My first group photo in ebay family:</description>
    </item>
    
    <item>
      <title>北京 | Beijing</title>
      <link>/post/beijing/</link>
      <pubDate>Sat, 20 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/beijing/</guid>
      <description>Location:library(leaflet)library(ggmap)location=geocode(&amp;quot;Beijing&amp;quot;, source = &amp;quot;dsk&amp;quot;)lon=location$lonlat=location$latm &amp;lt;- leaflet()%&amp;gt;%addTiles() %&amp;gt;% # Add default OpenStreetMap map tilessetView(lng=lon, lat=lat, zoom = 05) %&amp;gt;%addMarkers(lng=lon, lat=lat, popup=&amp;quot;Beijing&amp;quot;)m{&#34;x&#34;:{&#34;options&#34;:{&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}}},&#34;calls&#34;:[{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#34;,null,null,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false,&#34;attribution&#34;:&#34;&amp;copy; OpenStreetMap contributors, CC-BY-SA&#34;}]},{&#34;method&#34;:&#34;addMarkers&#34;,&#34;args&#34;:[39.9075,116.39723,null,null,null,{&#34;interactive&#34;:true,&#34;draggable&#34;:false,&#34;keyboard&#34;:true,&#34;title&#34;:&#34;&#34;,&#34;alt&#34;:&#34;&#34;,&#34;zIndexOffset&#34;:0,&#34;opacity&#34;:1,&#34;riseOnHover&#34;:false,&#34;riseOffset&#34;:250},&#34;Beijing&#34;,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]}],&#34;setView&#34;:[[39.9075,116.39723],5,[]],&#34;limits&#34;:{&#34;lat&#34;:[39.9075,39.9075],&#34;lng&#34;:[116.39723,116.39723]}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}Beijng in winter:Sunshine Insurance Product recommedation Project:Sebastian</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>/post/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Aussie</title>
      <link>/post/aussie/</link>
      <pubDate>Mon, 30 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>/post/aussie/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Machine Learning APIs by Google Cloud Training</title>
      <link>/post/machine-learning-apis-by-google-cloud-training/</link>
      <pubDate>Mon, 27 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>/post/machine-learning-apis-by-google-cloud-training/</guid>
      <description>https://google.qwiklabs.com/quests/32
Introduction to APIs in GoogleThe GET request method is used by a client to fetch data from a server. If the requested resource is found on the server, it will then be sent back to the client.
The PUT method replaces existing data or creates data if it does not exist. If you use PUT many times, it will have no effect — there will only be one copy of the dataset on the server.</description>
    </item>
    
    <item>
      <title>useR! 2019</title>
      <link>/post/user-2019/</link>
      <pubDate>Thu, 09 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>/post/user-2019/</guid>
      <description>“Scientists build to learn;Engineers learn to build” by Fred Brooks
useR! 2019 take place on Toulouse France during July 9-12 2019http://www.user2019.fr/
div.blue pre { background-color:lightblue; }div.blue pre.r { background-color:blue; }library(shiny)library(shinymeta)ui &amp;lt;- fluidPage(selectInput(&amp;quot;var&amp;quot;, label = &amp;quot;Choose a variable&amp;quot;, choices = names(cars)),verbatimTextOutput(&amp;quot;Summary&amp;quot;),verbatimTextOutput(&amp;quot;code&amp;quot;))Visualize:shinymeta by Joe Cheng
shinymeta is a new package to enhance shinyapp with interactive &amp;amp; reproducibility
https://github.com/rstudio/shinymeta</description>
    </item>
    
    <item>
      <title>kaggle kernel系列:方便面</title>
      <link>/post/kaggle-kernelramen-ratings/</link>
      <pubDate>Thu, 04 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>/post/kaggle-kernelramen-ratings/</guid>
      <description>数据集：方便面评分 ramen ratingsLink:https://www.kaggle.com/residentmario/ramen-ratings
2018年1月的数据，40KB，CSV format.7个变量，3180行数据量
数据源 从 在网站[theramenrater.com] 上爬下来。目前该网站还在继续点评方便面
数据内容是方便面的点评数据。外国人方便面都叫拉面。。weird。。
目前有 114个kernal(大部分为python),65个赞。
收录到在 2019-06-04期tidytuesday
https://github.com/rfordatascience/tidytuesday/tree/master/data/2019/2019-06-04
package# input datalibrary(readr)# clean datalibrary(tidyverse)# modellibrary(rpart)library(rpart.plot)library(ROCR)input dataramen_ratings &amp;lt;- readr::read_csv(&amp;quot;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-06-04/ramen_ratings.csv&amp;quot;)EDA3180行，6个变量
glimpse(ramen_ratings)## Observations: 3,180## Variables: 6## $ review_number &amp;lt;int&amp;gt; 3180, 3179, 3178, 3177, 3176, 3175, 3174, 3173, ...## $ brand &amp;lt;chr&amp;gt; &amp;quot;Yum Yum&amp;quot;, &amp;quot;Nagatanien&amp;quot;, &amp;quot;Acecook&amp;quot;, &amp;quot;Maison de C.</description>
    </item>
    
    <item>
      <title>Visit_record</title>
      <link>/post/visit-record/</link>
      <pubDate>Wed, 01 Jan 1997 00:00:00 +0000</pubDate>
      
      <guid>/post/visit-record/</guid>
      <description>testing</description>
    </item>
    
    <item>
      <title>Introduction to Git for Data Science</title>
      <link>/post/introduction-to-git-for-data-science/</link>
      <pubDate>Mon, 27 Jul 0201 00:00:00 +0000</pubDate>
      
      <guid>/post/introduction-to-git-for-data-science/</guid>
      <description>开篇Part 1 Basic workflow.git 保存 文件里的变动
git status
git diff
git diff data/northern.csv
git add report.txt
git status
Part 2 RepositoriesPart 3 UndoPart 4 Working with branchesPart 5 Collaborating参考https://www.datacamp.com/courses/introduction-to-git-for-data-science
</description>
    </item>
    
  </channel>
</rss>