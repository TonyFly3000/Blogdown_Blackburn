blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
library(ball)
install.packages('ball')
library(ball)
install.packages('Ball')
library(Ball)
############# Ball Correlation #############
num <- 50
x <- 1:num
y <- 1:num
x
bcor(x, y)
bcor(x, y, weight = TRUE)
bcor(x, y, weight = "prob")
bcor(x, y, weight = "chisq")
############# Ball Covariance #############
n <- 50
x <- rnorm(n)
y <- rnorm(n)
x
bcov(x, y)
bcov(x, y, weight = TRUE)
bcov(x, y, weight = "prob")
bcov(x, y, weight = "chisq")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
800*0.7
1170*0.7
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
servr::daemon_stop("2680609562728")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
library(quantmod)
library(plotly)
JG_data=as.data.frame(JG)
getSymbols("JG")
JG_data=as.data.frame(JG)
JG_data$time <- rownames(JG_data)
JG_data=JG_data%>%filter(time>='2018-06-01')
p <- plot_ly(JG_data, x = ~time, y = ~JG.Close, type = 'scatter', mode = 'lines+markers')
p
getSymbols("ebay")
JG_data=as.data.frame(JG)
JG_data$time <- rownames(JG_data)
JG_data=JG_data%>%filter(time>='2018-06-01')
p <- plot_ly(JG_data, x = ~time, y = ~JG.Close, type = 'scatter', mode = 'lines+markers')
p
data=getSymbols("ebay")
JG_data=as.data.frame(data)
JG_data$time <- rownames(JG_data)
JG_data=JG_data%>%filter(time>='2018-06-01')
p <- plot_ly(JG_data, x = ~time, y = ~JG.Close, type = 'scatter', mode = 'lines+markers')
p
JG_data=as.data.frame(EBAY)
JG_data$time <- rownames(JG_data)
JG_data=JG_data%>%filter(time>='2018-06-01')
p <- plot_ly(JG_data, x = ~time, y = ~JG.Close, type = 'scatter', mode = 'lines+markers')
p
JG_data=as.data.frame(EBAY)
JG_data$time <- rownames(JG_data)
JG_data=JG_data%>%filter(time>='2018-06-01')
p <- plot_ly(JG_data, x = ~time, y = ~JG.Close, type = 'scatter', mode = 'lines+markers')
p
p <- plot_ly(JG_data, x = ~time, y = ~EBAY.Close, type = 'scatter', mode = 'lines+markers')
p
JG_data=JG_data%>%filter(time>='2017-09-01')
p <- plot_ly(JG_data, x = ~time, y = ~EBAY.Close, type = 'scatter', mode = 'lines+markers')
p
JG_data=JG_data%>%filter(time>='2017-09-01')
p <- plot_ly(JG_data, x = ~time, y = ~EBAY.Close, type = 'scatter', mode = 'lines+markers')
p
JG_data=as.data.frame(EBAY)
JG_data$time <- rownames(JG_data)
JG_data=JG_data%>%filter(time>='2017-09-01')
p <- plot_ly(JG_data, x = ~time, y = ~EBAY.Close, type = 'scatter', mode = 'lines+markers')
p
JG_data=as.data.frame(EBAY)
JG_data$time <- rownames(JG_data)
JG_data=JG_data%>%filter(time>='2016-09-01')
p <- plot_ly(JG_data, x = ~time, y = ~EBAY.Close, type = 'scatter', mode = 'lines+markers')
p
blogdown:::serve_site()
library(quantmod)
library(plotly)
getSymbols("JG")
JG_data=as.data.frame(JG)
JG_data$time <- rownames(JG_data)
JG_data=JG_data%>%filter(time>='2018-06-01')
p <- plot_ly(JG_data, x = ~time, y = ~JG.Close, type = 'scatter', mode = 'lines+markers')
p
devtools::install_github(c("ramnathv/htmlwidgets", "rstudio/dygraphs"))
#devtools::install_github(c("ramnathv/htmlwidgets", "rstudio/dygraphs"))
library(dygraphs)
dygraph(JG, main = "JG stock price")
dygraph(JG, main = "JG stock price")%>% dyRangeSelector()
type(JG)
str(JG)
JG02 <- JG["2018"]
dygraph(JG02, main = "JG stock price")%>% dyRangeSelector()
JG02 <- JG["2018-08"/]
JG02 <- JG["2018-08/"]
dygraph(JG02, main = "JG stock price")%>% dyRangeSelector()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
library(ggplot2)
gg<- ggplot(diamonds, aes(carat, fill = cut)) +
geom_histogram(bins = 30)
gg
library(gapminder)
library(dplyr)
library(ggplot2)
gapminder2=gapminder%>%group_by(year,continent)%>%summarise(pop_m=sum(pop/1000000,na.rm = TRUE))
gg=ggplot(gapminder2, aes(x = year, y = pop_m,size=continent)) +
geom_point()
gg
library(gapminder)
library(dplyr)
library(ggplot2)
gapminder2=gapminder%>%group_by(year,continent)%>%summarise(pop_m=sum(pop/1000000,na.rm = TRUE))
gg=ggplot(gapminder2, aes(x = year, y = pop_m,size=continent)) +
geom_point()
gg
library(gapminder)
library(dplyr)
library(ggplot2)
gapminder2=gapminder%>%group_by(year,continent)%>%summarise(pop_m=sum(pop/1000000,na.rm = TRUE))
gg=ggplot(gapminder2, aes(x = year, y = pop_m,color=continent)) +
geom_point()
gg
gg=ggplot(gapminder2, aes(x = year, y = pop_m,color=continent)) +
geom_point()+scale_fill_viridis(discrete = TRUE)
gg
library(viridis)
gg=ggplot(gapminder2, aes(x = year, y = pop_m,color=continent)) +
geom_point()+scale_fill_viridis(discrete = TRUE)
gg
p <- ggplot(mtcars, aes(wt, mpg))
p + geom_point(size=4, aes(colour = factor(cyl)))
p + geom_point(size=4, aes(colour = factor(cyl))) +
scale_color_viridis(discrete=TRUE) +
theme_bw()
p + geom_point(size=4, aes(colour = factor(cyl)))
p + geom_point(size=4, aes(colour = factor(cyl))) +
scale_color_viridis(discrete=TRUE) +
theme_bw()
p + geom_point(size=4, aes(colour = factor(cyl))) +
scale_color_viridis(discrete=TRUE)
p + geom_point(size=4, aes(colour = factor(cyl))) +
scale_color_brewer(palette="Dark2")
blogdown:::new_post_addin()
library(ggplot2)
ggplot(aes(x='carat', y='price', color='clarity'), data=diamonds) +
geom_point() +
scale_color_brewer(type='qual')
library(ggplot2)
gg=ggplot(aes(x='carat', y='price', color='clarity'), data=diamonds) +
geom_point() +
scale_color_brewer(type='qual')
gg
gg=ggplot(aes(x='carat', y='price', color='clarity'), data=diamonds) +
geom_point() +
scale_color_brewer(type='qual')
gg
data001=diamonds
gg=ggplot(data001,aes(x='carat', y='price', color='clarity')) +
geom_point() +
scale_color_brewer(type='qual')
gg
glimpse(data001)
gg=ggplot(data001,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_color_brewer(type='qual')
gg
library(ggplot2)
data001=diamonds
gg=ggplot(data001,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_color_brewer(type='qual')
gg
library(ggplot2)
data001=diamonds
gg=ggplot(data001,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_color_brewer(type='seq')
gg
library(ggplot2)
data001=diamonds
gg=ggplot(data001,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_color_brewer(type='div')
gg
library(ggplot2)
data001=diamonds
gg=ggplot(data001,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_color_brewer(type='qual')
gg
library(ggplot2)
library(viridis)
data001=diamonds
gg=ggplot(data001,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_fill_viridis(discrete = TRUE)
gg
library(ggplot2)
library(plotly)
library(viridis)
data001=diamonds
p=plotly(data001,aes(x=carat, y=~price, color=~clarity))
library(ggplot2)
library(plotly)
library(viridis)
data001=diamonds
p=plotly(data=data001,aes(x=carat, y=~price, color=~clarity))
library(ggplot2)
library(plotly)
library(viridis)
data001=diamonds
p=plot_ly(data=data001,aes(x=carat, y=~price, color=~clarity))
p
library(ggplot2)
library(plotly)
library(viridis)
data001=diamonds
p=plot_ly(data=data001,aes(x=carat, y=~price, color=~clarity))
p
p=plot_ly(data=data001,x=carat, y=~price, color=~clarity)
data001=diamonds
p=plot_ly(data=data001,x=carat, y=~price, color=~clarity)
p
p=plot_ly(data=data001,x=~carat, y=~price, color=~clarity)
p
p=plot_ly(data=data001,x=~carat, y=~price, color=~clarity,colors = viridis_pal(option = "D")(3))
p
p=plot_ly(data=data001,x=~carat, y=~price, color=~clarity,colors = viridis_pal(option = "C")(3))
p
p=plot_ly(data=data001,x=~carat, y=~price, color=~clarity,colors = viridis_pal(option = "C"))
p
?viridis_pal
library(ggplot2)
library(plotly)
library(viridis)
data001=diamonds
p=plot_ly(data=data001,x=~carat, y=~price, color=~clarity,colors = viridis_pal(option = "A")(3))
p
blogdown:::serve_site()
blogdown:::serve_site()
data001=sample(diamonds,500)
library(ggplot2)
data001=sample(diamonds,500)
library(ggplot2)
data001=sample(diamonds,50)
library(ggplot2)
data001=sample(diamonds,50)
data001=diamonds
data002=sample(data001,500)
?sample
data002=sample_n(data001,5000)
library(dplyr)
data002=sample_n(data001,5000)
gg=ggplot(data001,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_color_brewer(type='qual')
gg
gg=ggplot(data002,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_color_brewer(type='qual')
gg
library(ggplot2)
library(dplyr)
data001=diamonds
data002=sample_n(data001,1000)
gg=ggplot(data002,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_color_brewer(type='qual')
gg
library(ggplot2)
library(dplyr)
data001=diamonds
data002=sample_n(data001,1000)
gg=ggplot(data002,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_color_brewer(type='qual')
gg
library(ggplot2)
library(dplyr)
data001=diamonds
data002=sample_n(data001,1000)
gg=ggplot(data002,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_color_brewer(type='qual')
gg
library(plotly)
library(viridis)
library(ggplot2)
library(dplyr)
data001=diamonds
data002=sample_n(data001,1000)
p=plot_ly(data=data002x=~carat, y=~price, color=~clarity,colors = viridis_pal(option = "B")(3))
library(plotly)
library(viridis)
library(ggplot2)
library(dplyr)
data001=diamonds
data002=sample_n(data001,1000)
p=plot_ly(data=data002,x=~carat, y=~price, color=~clarity,colors = viridis_pal(option = "B")(3))
p
library(plotly)
library(viridis)
library(ggplot2)
library(dplyr)
data001=diamonds
data002=sample_n(data001,1000)
p=plot_ly(data=data002,x=~carat, y=~price, color=~clarity,colors = viridis_pal(option = "A")(3))
p
library(plotly)
library(viridis)
library(ggplot2)
library(dplyr)
data001=diamonds
data002=sample_n(data001,1000)
p=plot_ly(data=data002,x=~carat, y=~price, color=~clarity)
p
library(ggplot2)
library(dplyr)
library(viridis)
data001=diamonds
data002=sample_n(data001,1000)
gg=ggplot(data002,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_fill_viridis(discrete = TRUE)
gg
library(ggplot2)
library(dplyr)
data001=diamonds
data002=sample_n(data001,1000)
gg=ggplot(data002,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_color_brewer(type='div')
gg
library(ggplot2)
library(dplyr)
data001=diamonds
data002=sample_n(data001,1000)
gg=ggplot(data002,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_color_brewer(type='seq')
gg
library(ggplot2)
library(dplyr)
data001=diamonds
data002=sample_n(data001,1000)
gg=ggplot(data002,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_color_brewer(type='qual')
gg
library(plotly)
library(viridis)
library(dplyr)
data002=sample_n(diamonds,1000)
p=plot_ly(data=data002,x=~carat, y=~price, color=~clarity,colors = viridis_pal(option = "B")(3))
p
# color brewer:qual
library(ggplot2)
library(dplyr)
data002=sample_n(diamonds,1000)
gg=ggplot(data002,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_color_brewer(type='qual')
# default option
library(plotly)
library(viridis)
library(dplyr)
data002=sample_n(diamonds,1000)
plot_ly(data=data002,x=~carat, y=~price, color=~clarity,marker = list(color = brewer.pal(6, "Paired")))
# default option
library(plotly)
library(RColorBrewer)
library(dplyr)
data002=sample_n(diamonds,1000)
plot_ly(data=data002,x=~carat, y=~price, color=~clarity,marker = list(color = brewer.pal(6, "Paired")))
# default option
library(plotly)
library(RColorBrewer)
library(dplyr)
data002=sample_n(diamonds,1000)
plot_ly(data=data002,x=~carat, y=~price, color=~clarity,marker = list(color = brewer.pal(8, "goldenrod")))
# default option
library(plotly)
library(RColorBrewer)
library(dplyr)
data002=sample_n(diamonds,1000)
plot_ly(data=data002,x=~carat, y=~price, color=~clarity,marker = list(color = brewer.pal(8, "blue")))
# default option
library(plotly)
library(RColorBrewer)
library(dplyr)
data002=sample_n(diamonds,1000)
plot_ly(data=data002,x=~carat, y=~price, color=~clarity,marker = list(color = brewer.pal(8, "Paired")))
# default option
library(plotly)
library(RColorBrewer)
library(dplyr)
data002=sample_n(diamonds,1000)
plot_ly(data=data002,x=~carat, y=~price, color=~clarity,marker = list(color = brewer.pal(8, "Set3")))
# default option
library(plotly)
library(RColorBrewer)
library(dplyr)
data002=sample_n(diamonds,1000)
plot_ly(data=data002,x=~carat, y=~price, color=~clarity,marker = list(color = brewer.pal(8, "Accent")))
display.brewer.all()
# default option
library(plotly)
library(RColorBrewer)
library(dplyr)
data002=sample_n(diamonds,1000)
plot_ly(data=data002,x=~carat, y=~price, color=~clarity,marker = list(color = brewer.pal(8, "RdBu")))
# default option
library(plotly)
library(RColorBrewer)
library(dplyr)
data002=sample_n(diamonds,1000)
plot_ly(data=data002,x=~carat, y=~price, color=~clarity,colors = brewer.pal(8, "RdBu")))
# default option
library(plotly)
library(RColorBrewer)
library(dplyr)
data002=sample_n(diamonds,1000)
plot_ly(data=data002,x=~carat, y=~price, color=~clarity,colors = brewer.pal(8, "RdBu"))
blogdown:::serve_site()
blogdown:::serve_site()
# https://github.com/jeroen/mongolite
install.packages('mongolite')
# https://github.com/jeroen/mongolite
install.packages('mongolite')
library(mongolite)
# Connect to demo server
con <- mongo("mtcars", url = "mongodb://readwrite:test@mongo.opencpu.org:43942/jeroen_test")
if(con$count() > 0)
con$drop()
con$insert(mtcars)
stopifnot(con$count() == nrow(mtcars))
# Query data
mydata <- con$find()
stopifnot(all.equal(mydata, mtcars))
con$drop()
View(mydata)
library(ggplot2)
data001=mtcars
names(data001) = gsub(" ","",names(data001))
names(data001)
my_collection = mongo(collection = "mtcars", db = "mongo_db") # create connection, database and collection
my_collection$insert(data001)
library(mongolite)
m <- mongo(collection = "diamonds")
