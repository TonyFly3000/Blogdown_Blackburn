theme_minimal() +
geom_point()
library(ggplot2)
library(gganimate)
gg_plot <- ggplot(data001, aes(x = marriage_couple, y = divorce_couple)) +
xlab("GDP per capita") +
ylab("Life expectancy at birth") +
theme_minimal() +
geom_point()
gg_plot
library(ggplot2)
library(gganimate)
gg_plot <- ggplot(data001, aes(x = marriage_couple, y = divorce_couple)) +
xlab("GDP per capita") +
ylab("Life expectancy at birth") +
theme_minimal() +
geom_point() +
geom_text(aes(label = area), size=3,vjust = 1, hjust = 1, check_overlap = TRUE)
gg_plot
library(ggplot2)
library(gganimate)
gg_plot <- ggplot(data001, aes(x = marriage_couple, y = divorce_couple)) +
xlab("GDP per capita") +
ylab("Life expectancy at birth") +
theme_minimal() +
geom_point() +
geom_text(aes(label = area), size=3,vjust = 1, hjust = 1, check_overlap = TRUE)+
# gganimate code
ggtitle("{frame_time}") +
transition_time(year)
animate(gg_plot)
library(ggplot2)
library(gganimate)
gg_plot <- ggplot(data001, aes(x = marriage_couple, y = divorce_couple,color=area)) +
xlab("结婚人数(对)") +
ylab("离婚人数(对)") +
theme_minimal() +
geom_point() +
geom_text(aes(label = area), size=3,vjust = 1, hjust = 1, check_overlap = TRUE)+
# gganimate code
ggtitle("{frame_time}") +
transition_time(year)
animate(gg_plot)
Sys.setlocale(locale = "Chinese")
library(tidyverse)
library(dplyr)
library(scales)
library(ggplot2)
library(readr)
library(janitor)
library(ggthemes)
theme_set(theme_light())
marriage001=read_csv('marriage.csv')
divorce001=read_csv('divorce.csv')
head(marriage001)
head(divorce001)
marriage002=marriage001 %>% gather(year,marriage_couple, '2017':'2009')
divorce002=divorce001 %>% gather(year,divorce_couple, '2017':'2009')
head(marriage002)
head(divorce002)
library(sqldf)
data001=sqldf('select t1.*,t2.divorce_couple from marriage002 t1
left join divorce002 t2
on t1.area=t2.area and t1.year=t2.year')
data001$year=as.integer(data001$year)
data001$divorce_marriage_ratio=round(data001$divorce_couple/data001$marriage_couple,2)
head(data001)
library(ggplot2)
library(gganimate)
library(ggrepel)
data002=data001 %>% filter(year==2017) %>% arrange(divorce_marriage_ratio)
data003=rbind(head(data002,3),tail(data002,3))
data004=data001 %>% filter(area %in% data003$area)
gg_plot=ggplot(data004, aes(year, divorce_marriage_ratio, group = area)) +
geom_line() +
geom_segment(aes(xend = 31, yend = divorce_marriage_ratio), linetype = 2, colour = 'blue') +
geom_point(size = 2) +
geom_text(aes(x = 31.1, label = area), hjust = 0) +
transition_reveal(Day) +
coord_cartesian(clip = 'off') +
labs(title = '最高和最低省份离婚比率', y = '离婚比率') +
theme_minimal() +
theme(plot.margin = margin(5.5, 40, 5.5, 5.5))
library(ggplot2)
library(gganimate)
library(ggrepel)
data002=data001 %>% filter(year==2017) %>% arrange(divorce_marriage_ratio)
data003=rbind(head(data002,3),tail(data002,3))
data004=data001 %>% filter(area %in% data003$area)
gg_plot=ggplot(data004, aes(year, divorce_marriage_ratio, group = area)) +
geom_line() +
geom_segment(aes(xend = 31, yend = divorce_marriage_ratio), linetype = 2, colour = 'blue') +
geom_point(size = 2) +
geom_text(aes(x = 31.1, label = area), hjust = 0) +
transition_reveal(Day) +
coord_cartesian(clip = 'off') +
labs(title = '最高和最低省份离婚比率', y = '离婚比率') +
theme_minimal() +
theme(plot.margin = margin(5.5, 40, 5.5, 5.5))
gg_plot
library(ggplot2)
library(gganimate)
library(ggrepel)
data002=data001 %>% filter(year==2017) %>% arrange(divorce_marriage_ratio)
data003=rbind(head(data002,3),tail(data002,3))
data004=data001 %>% filter(area %in% data003$area)
gg_plot=ggplot(data004, aes(year, divorce_marriage_ratio, group = area)) +
geom_line() +
geom_segment(aes(xend = 31, yend = divorce_marriage_ratio), linetype = 2, colour = 'blue') +
geom_point(size = 2) +
geom_text(aes(x = 31.1, label = area), hjust = 0) +
transition_reveal(Day) +
coord_cartesian(clip = 'off') +
labs(title = '最高和最低省份离婚比率', y = '离婚比率') +
theme_minimal() +
theme(plot.margin = margin(5.5, 40, 5.5, 5.5))
animate(gg_plot)
library(ggplot2)
library(gganimate)
library(ggrepel)
data002=data001 %>% filter(year==2017) %>% arrange(divorce_marriage_ratio)
data003=rbind(head(data002,3),tail(data002,3))
data004=data001 %>% filter(area %in% data003$area)
gg_plot=ggplot(data004, aes(year, divorce_marriage_ratio, group = area)) +
geom_line() +
geom_segment(aes(xend = 31, yend = divorce_marriage_ratio), linetype = 2, colour = 'blue') +
geom_point(size = 2) +
geom_text(aes(x = 31.1, label = area), hjust = 0) +
transition_reveal(Day) +
coord_cartesian(clip = 'off') +
labs(title = '最高和最低省份离婚比率', y = '离婚比率') +
theme_minimal() +
theme(plot.margin = margin(5.5, 40, 5.5, 5.5))
gg_plot
data004
library(ggplot2)
library(gganimate)
library(ggrepel)
data002=data001 %>% filter(year==2017) %>% arrange(divorce_marriage_ratio)
data003=rbind(head(data002,3),tail(data002,3))
data004=data001 %>% filter(area %in% data003$area)
gg_plot=ggplot(data004, aes(year, divorce_marriage_ratio, group = area)) +
geom_line() +
geom_segment(aes(xend = 31, yend = divorce_marriage_ratio), linetype = 2, colour = 'blue') +
geom_point(size = 2) +
geom_text(aes(x = 31.1, label = area), hjust = 0) +
transition_reveal(Day) +
coord_cartesian(clip = 'off') +
labs(title = '最高和最低省份离婚比率', y = '离婚比率') +
theme_minimal() +
theme(plot.margin = margin(5.5, 40, 5.5, 5.5))
gg_plot
library(ggplot2)
library(gganimate)
library(ggrepel)
data002=data001 %>% filter(year==2017) %>% arrange(divorce_marriage_ratio)
data003=rbind(head(data002,3),tail(data002,3))
data004=data001 %>% filter(area %in% data003$area)
ggplot(data004, aes(year, divorce_marriage_ratio, group = area)) +
geom_line() +
geom_segment(aes(xend = 31, yend = divorce_marriage_ratio), linetype = 2, colour = 'grey') +
geom_point(size = 2) +
geom_text(aes(x = 31.1, label = Month), hjust = 0) +
transition_reveal(year) +
coord_cartesian(clip = 'off') +
labs(title = 'Temperature in New York', y = 'Temperature (°F)') +
theme_minimal() +
theme(plot.margin = margin(5.5, 40, 5.5, 5.5))
library(ggplot2)
library(gganimate)
library(ggrepel)
data002=data001 %>% filter(year==2017) %>% arrange(divorce_marriage_ratio)
data003=rbind(head(data002,3),tail(data002,3))
data004=data001 %>% filter(area %in% data003$area)
ggplot(data004, aes(year, divorce_marriage_ratio, group = area)) +
geom_line() +
geom_segment(aes(xend = 31, yend = divorce_marriage_ratio), linetype = 2, colour = 'grey') +
geom_point(size = 2) +
geom_text(aes(x = 31.1, label = year), hjust = 0) +
transition_reveal(year) +
coord_cartesian(clip = 'off') +
labs(title = 'Temperature in New York', y = 'Temperature (°F)') +
theme_minimal() +
theme(plot.margin = margin(5.5, 40, 5.5, 5.5))
library(ggplot2)
library(gganimate)
library(ggrepel)
data002=data001 %>% filter(year==2017) %>% arrange(divorce_marriage_ratio)
data003=rbind(head(data002,3),tail(data002,3))
data004=data001 %>% filter(area %in% data003$area)
ggplot(data004, aes(year, divorce_marriage_ratio, group = area)) +
geom_line() +
geom_segment(aes(xend = 31, yend = divorce_marriage_ratio), linetype = 2, colour = 'grey') +
geom_point(size = 2) +
geom_text(aes(x = 31.1, label = area), hjust = 0) +
transition_reveal(year) +
coord_cartesian(clip = 'off') +
labs(title = 'Temperature in New York', y = 'Temperature (°F)') +
theme_minimal() +
theme(plot.margin = margin(5.5, 40, 5.5, 5.5))
Sys.setlocale(locale = "Chinese")
library(ggplot2)
library(gganimate)
library(ggrepel)
data002=data001 %>% filter(year==2017) %>% arrange(divorce_marriage_ratio)
data003=rbind(head(data002,3),tail(data002,3))
data004=data001 %>% filter(area %in% data003$area)
ggplot(data004, aes(year, divorce_marriage_ratio, group = area)) +
geom_line() +
geom_segment(aes(xend = 31, yend = divorce_marriage_ratio), linetype = 2, colour = 'grey') +
geom_point(size = 2) +
geom_text(aes(x = 31.1, label = area), hjust = 0) +
transition_reveal(year) +
coord_cartesian(clip = 'off') +
labs(title = 'Temperature in New York', y = 'Temperature (°F)') +
theme_minimal() +
theme(plot.margin = margin(5.5, 40, 5.5, 5.5))
airq <- airquality
airq$Month <- format(ISOdate(2004,1:12,1),"%B")[airq$Month]
ggplot(airq, aes(Day, Temp, group = Month)) +
geom_line() +
geom_segment(aes(xend = 31, yend = Temp), linetype = 2, colour = 'grey') +
geom_point(size = 2) +
geom_text(aes(x = 31.1, label = Month), hjust = 0) +
transition_reveal(Day) +
coord_cartesian(clip = 'off') +
labs(title = 'Temperature in New York', y = 'Temperature (°F)') +
theme_minimal() +
theme(plot.margin = margin(5.5, 40, 5.5, 5.5))
library(ggplot2)
library(gganimate)
library(ggrepel)
data002=data001 %>% filter(year==2017) %>% arrange(divorce_marriage_ratio)
data003=rbind(head(data002,3),tail(data002,3))
data004=data001 %>% filter(area %in% data003$area)
gg_plot =data004 %>% mutate(label = if_else(year == max(year), as.character(area), NA_character_)) %>% ggplot(aes(x = year, divorce_marriage_ratio ,col=area)) +
theme_minimal() +
geom_line() +theme(legend.position="none")+
geom_label_repel(aes(label = label),nudge_x = 1,na.rm = TRUE)+
labs(y="离婚比率",
title = "最高和最低省份离婚比率",
subtitle = "离婚比率=当年离婚人数除以结婚人数",
caption ="统计时间:2009-2017;数据源:中国统计局
@Tony Duan")+ scale_x_continuous(breaks=seq(2009,2017,1))
gg_plot+ geom_point(aes(group = seq_along(year))) +transition_reveal(year)
library(ggplot2)
library(gganimate)
library(ggrepel)
data002=data001 %>% filter(year==2017) %>% arrange(divorce_marriage_ratio)
data003=rbind(head(data002,3),tail(data002,3))
data004=data001 %>% filter(area %in% data003$area)
gg_plot =data004 %>% mutate(label = if_else(year == max(year), as.character(area), NA_character_)) %>% ggplot(aes(x = year, divorce_marriage_ratio ,col=area)) +
theme_minimal() +
geom_line() +theme(legend.position="none")+
geom_label_repel(aes(label = label),nudge_x = 1,na.rm = TRUE)+
labs(y="离婚比率",
title = "最高和最低省份离婚比率",
subtitle = "离婚比率=当年离婚人数除以结婚人数",
caption ="统计时间:2009-2017;数据源:中国统计局
@Tony Duan")+ scale_x_continuous(breaks=seq(2009,2017,1))
gg_plot+ geom_point(aes(group = seq_along(year)))
library(tidyverse)
library(dplyr)
library(scales)
library(ggplot2)
library(readr)
library(janitor)
library(ggthemes)
library(sqldf)
library(readxl)
library(rayshader)
theme_set(theme_light())
Sys.setlocale(locale = "Chinese")
marriage001=read_csv('marriage.csv')
divorce001=read_csv('divorce.csv')
income001=read_excel('income.xls')
marriage002=marriage001 %>% gather(year,marriage_couple, '2017':'2009')
divorce002=divorce001 %>% gather(year,divorce_couple, '2017':'2009')
income002=income001 %>% gather(year,annual_income, '2017':'2009')
head(marriage002)
head(divorce002)
data001=sqldf('select t1.*,t2.divorce_couple,t3.annual_income
from marriage002 t1
left join divorce002 t2
on t1.area=t2.area and t1.year=t2.year
left join income002 t3
on t1.area=t3.area')
data001$year=as.integer(data001$year)
data001$divorce_marriage_ratio=round(data001$divorce_couple/data001$marriage_couple,2)
data001=data001 %>% arrange()
gg_plot <- ggplot(data001, aes(x = year, y = divorce_marriage_ratio,col=annual_income)) +
theme_minimal() +
geom_point() +
labs(y="离婚比率",
title = "2017年各省离婚比率",
subtitle = "2009到2017年各省离婚比率",
caption ="统计时间:2017;数据源:中国统计局
@Tony Duan")
gg_plot
plot_gg(gg_plot, height=3, width=3.5, multicore=TRUE, pointcontract = 0.7, soliddepth=-200)
marriage001=read_csv('marriage.csv')
blogdown:::serve_site()
blogdown:::serve_site()
mtplot = ggplot(mtcars) +
geom_point(aes(x = mpg, y = disp, color = cyl)) +
scale_color_continuous(limits = c(0, 8))
plot_gg(pp, width = 5, height = 4, scale = 300, multicore = TRUE, windowsize = c(1200, 960),
fov = 70, zoom = 0.4, theta = 330, phi = 40)
render_snapshot(clear = TRUE)
library(rayshader)
library(ggplot2)
mtplot = ggplot(mtcars) +
geom_point(aes(x = mpg, y = disp, color = cyl)) +
scale_color_continuous(limits = c(0, 8))
plot_gg(pp, width = 5, height = 4, scale = 300, multicore = TRUE, windowsize = c(1200, 960),
fov = 70, zoom = 0.4, theta = 330, phi = 40)
render_snapshot(clear = TRUE)
mtplot = ggplot(mtcars) +
geom_point(aes(x = mpg, y = disp, color = cyl)) +
scale_color_continuous(limits = c(0, 8))
plot_gg(pp, width = 5, height = 4, scale = 300, multicore = TRUE, windowsize = c(1200, 960),
fov = 70, zoom = 0.4, theta = 330, phi = 40)
plot_gg(mtplot, width = 5, height = 4, scale = 300, multicore = TRUE, windowsize = c(1200, 960),
fov = 70, zoom = 0.4, theta = 330, phi = 40)
render_snapshot(clear = TRUE)
plot_gg(mtplot, width = 5, height = 4, scale = 300, multicore = TRUE, windowsize = c(1200, 960),
fov = 70,theta = 330, phi = 40)
render_snapshot(clear = TRUE)
library(ggplot2)
library(gganimate)
#library(ggrepel)
data002=data001 %>% filter(year==2017) %>% arrange(divorce_marriage_ratio)
data003=rbind(head(data002,3),tail(data002,3))
data004=data001 %>% filter(area %in% data003$area)
data004=data004 %>% arrange(year,area)
gg_plot =data004 %>% mutate(label = if_else(year == max(year), as.character(area), NA_character_)) %>% ggplot(aes(x = year, divorce_marriage_ratio ,col=area)) +
theme_minimal() +
geom_line() +theme(legend.position="none")+
geom_text(aes(y=divorce_marriage_ratio,label=area))+
#geom_label_repel(aes(label = area),nudge_x = 1,na.rm = TRUE)+
labs(y="离婚比率",
title = "最高和最低省份离婚比率",
subtitle = "离婚比率=当年离婚人数除以结婚人数",
caption ="统计时间:2009-2017;数据源:中国统计局
@Tony Duan")+ scale_x_continuous(breaks=seq(2009,2017,1))
gg_plot+ geom_point(aes(group = seq_along(year)))+geom_point(aes(group = seq_along(year)))+transition_reveal(year)
library(tidyverse)
library(dplyr)
library(scales)
library(ggplot2)
library(readr)
library(janitor)
library(ggthemes)
library(readxl)
library(rayshader)
library(sqldf)
theme_set(theme_light())
marriage001=read_csv('marriage.csv')
divorce001=read_csv('divorce.csv')
income001=read_excel('income.xls')
marriage002=marriage001 %>% gather(year,marriage_couple, '2017':'2009')
divorce002=divorce001 %>% gather(year,divorce_couple, '2017':'2009')
income002=income001 %>% gather(year,annual_income, '2017':'2009')
data001=sqldf('select t1.*,t2.divorce_couple,t3.annual_income
from marriage002 t1
left join divorce002 t2
on t1.area=t2.area and t1.year=t2.year
left join income002 t3
on t1.area=t3.area and t1.year=t3.year')
data001$year=as.integer(data001$year)
data001$divorce_marriage_ratio=round(data001$divorce_couple/data001$marriage_couple,2)
head(data001)
data002=data001 %>% filter(year==2017) %>% arrange(divorce_marriage_ratio)
data003=rbind(head(data002,3),tail(data002,3))
data004=data001 %>% filter(area %in% data003$area)
data004=data004 %>% arrange(year,area)
gg_plot =data004 %>% mutate(label = if_else(year == max(year), as.character(area), NA_character_)) %>% ggplot(aes(x = year, divorce_marriage_ratio ,col=area)) +
theme_minimal() +
geom_line() +theme(legend.position="none")+
geom_text(aes(y=divorce_marriage_ratio,label=area))+
#geom_label_repel(aes(label = area),nudge_x = 1,na.rm = TRUE)+
labs(y="离婚比率",
title = "最高和最低省份离婚比率",
subtitle = "离婚比率=当年离婚人数除以结婚人数",
caption ="统计时间:2009-2017;数据源:中国统计局
@Tony Duan")+ scale_x_continuous(breaks=seq(2009,2017,1))
gg_plot+ geom_point(aes(group = seq_along(year)))+geom_point(aes(group = seq_along(year)))+transition_reveal(year)
data001=sqldf('select t1.*,t2.divorce_couple,t3.annual_income
from marriage002 t1
left join divorce002 t2
on t1.area=t2.area and t1.year=t2.year
left join income002 t3
on t1.area=t3.area and t1.year=t3.year')
data001$year=as.integer(data001$year)
data001$divorce_marriage_ratio=round(data001$divorce_couple/data001$marriage_couple,2)
head(data001)
marriage001=read_csv('marriage.csv')
marriage001=read_csv('C:/Users/User/Desktop/Mission/R/Blogdown_Blackburn/content/post/marriage.csv')
divorce001=read_csv('C:/Users/User/Desktop/Mission/R/Blogdown_Blackburn/content/post/divorce.csv')
income001=read_excel('C:/Users/User/Desktop/Mission/R/Blogdown_Blackburn/content/post/income.xls')
marriage002=marriage001 %>% gather(year,marriage_couple, '2017':'2009')
divorce002=divorce001 %>% gather(year,divorce_couple, '2017':'2009')
income002=income001 %>% gather(year,annual_income, '2017':'2009')
data001=sqldf('select t1.*,t2.divorce_couple,t3.annual_income
from marriage002 t1
left join divorce002 t2
on t1.area=t2.area and t1.year=t2.year
left join income002 t3
on t1.area=t3.area  and t1.year=t3.year')
data001$year=as.integer(data001$year)
data001$divorce_marriage_ratio=round(data001$divorce_couple/data001$marriage_couple,2)
data001$annual_income_k=round(data001$annual_income/1000)
gg_plot =data004 %>% mutate(label = if_else(year == max(year), as.character(area), NA_character_)) %>% ggplot(aes(x = year, divorce_marriage_ratio ,col=area)) +
theme_minimal() +
geom_line() +theme(legend.position="none")+
geom_text(aes(y=divorce_marriage_ratio,label=area))+
#geom_label_repel(aes(label = area),nudge_x = 1,na.rm = TRUE)+
labs(y="离婚比率",
title = "最高和最低省份离婚比率",
subtitle = "离婚比率=当年离婚人数除以结婚人数",
caption ="统计时间:2009-2017;数据源:中国统计局
@Tony Duan")+ scale_x_continuous(breaks=seq(2009,2017,1))
gg_plot+ geom_point(aes(group = seq_along(year)))+geom_point(aes(group = seq_along(year)))+transition_reveal(year)
data002=data001 %>% filter(year==2017) %>% arrange(divorce_marriage_ratio)
data003=rbind(head(data002,3),tail(data002,3))
data004=data001 %>% filter(area %in% data003$area)
data004=data004 %>% arrange(year,area)
gg_plot =data004 %>% mutate(label = if_else(year == max(year), as.character(area), NA_character_)) %>% ggplot(aes(x = year, divorce_marriage_ratio ,col=area)) +
theme_minimal() +
geom_line() +theme(legend.position="none")+
geom_text(aes(y=divorce_marriage_ratio,label=area))+
#geom_label_repel(aes(label = area),nudge_x = 1,na.rm = TRUE)+
labs(y="离婚比率",
title = "最高和最低省份离婚比率",
subtitle = "离婚比率=当年离婚人数除以结婚人数",
caption ="统计时间:2009-2017;数据源:中国统计局
@Tony Duan")+ scale_x_continuous(breaks=seq(2009,2017,1))
gg_plot+ geom_point(aes(group = seq_along(year)))+geom_point(aes(group = seq_along(year)))+transition_reveal(year)
gg_plot
gg_plot+transition_reveal(year)
gg_plot =data004 %>% mutate(label = if_else(year == max(year), as.character(area), NA_character_)) %>%
ggplot(aes(x = year, divorce_marriage_ratio ,col=area)) +
#theme_minimal() +
geom_line() +
#theme(legend.position="none")+
#geom_text(aes(y=divorce_marriage_ratio,label=area))+
#geom_label_repel(aes(label = area),nudge_x = 1,na.rm = TRUE)+
labs(y="离婚比率",
title = "最高和最低省份离婚比率",
subtitle = "离婚比率=当年离婚人数除以结婚人数",
caption ="统计时间:2009-2017;数据源:中国统计局
@Tony Duan")+ scale_x_continuous(breaks=seq(2009,2017,1))
gg_plot
gg_plot =data004 %>% mutate(label = if_else(year == max(year), as.character(area), NA_character_)) %>%
ggplot(aes(x = year, divorce_marriage_ratio ,col=area)) +
theme_minimal() +
geom_line() +
#theme(legend.position="none")+
#geom_text(aes(y=divorce_marriage_ratio,label=area))+
#geom_label_repel(aes(label = area),nudge_x = 1,na.rm = TRUE)+
labs(y="离婚比率",
title = "最高和最低省份离婚比率",
subtitle = "离婚比率=当年离婚人数除以结婚人数",
caption ="统计时间:2009-2017;数据源:中国统计局
@Tony Duan")+ scale_x_continuous(breaks=seq(2009,2017,1))
gg_plot
gg_plot+transition_reveal(year)
gg_plot+ geom_point(aes(group = seq_along(year)))+transition_reveal(year)
gg_plot =data004 %>% mutate(label = if_else(year == max(year), as.character(area), NA_character_)) %>%
ggplot(aes(x = year, divorce_marriage_ratio ,col=area)) +
theme_minimal() +
geom_line(size=8) +
#theme(legend.position="none")+
#geom_text(aes(y=divorce_marriage_ratio,label=area))+
#geom_label_repel(aes(label = area),nudge_x = 1,na.rm = TRUE)+
labs(y="离婚比率",
title = "最高和最低省份离婚比率",
subtitle = "离婚比率=当年离婚人数除以结婚人数",
caption ="统计时间:2009-2017;数据源:中国统计局
@Tony Duan")+ scale_x_continuous(breaks=seq(2009,2017,1))
gg_plot
gg_plot+ geom_point(aes(group = seq_along(year)))+transition_reveal(year)
gg_plot =data004 %>% mutate(label = if_else(year == max(year), as.character(area), NA_character_)) %>%
ggplot(aes(x = year, divorce_marriage_ratio ,col=area)) +
theme_minimal() +
geom_line(size=5) +
#theme(legend.position="none")+
#geom_text(aes(y=divorce_marriage_ratio,label=area))+
#geom_label_repel(aes(label = area),nudge_x = 1,na.rm = TRUE)+
labs(y="离婚比率",
title = "最高和最低省份离婚比率",
subtitle = "离婚比率=当年离婚人数除以结婚人数",
caption ="统计时间:2009-2017;数据源:中国统计局
@Tony Duan")+ scale_x_continuous(breaks=seq(2009,2017,1))
gg_plot
gg_plot+ geom_point(aes(group = seq_along(year)))+transition_reveal(year)
library(rayshader)
library(ggplot2)
gg = ggplot(diamonds, aes(x, depth)) +
stat_density_2d(aes(fill = stat(nlevel)),
geom = "polygon",
n = 100,bins = 10,contour = TRUE) +
facet_wrap(clarity~.) +
scale_fill_viridis_c(option = "A")
plot_gg(gg,multicore=TRUE,width=5,height=5,scale=250)
render_movie()
??render_movie()
render_movie('abc.mp4')
getwd()
blogdown:::serve_site()
htmltools::tags$video(src = 'abc.mp4')
htmltools::tags$video(src = 'abc.mp4')
