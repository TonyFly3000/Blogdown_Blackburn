gg
library(gapminder)
library(dplyr)
library(ggplot2)
gapminder2=gapminder%>%group_by(year,continent)%>%summarise(pop_m=sum(pop/1000000,na.rm = TRUE))
gg=ggplot(gapminder2, aes(x = year, y = pop_m,size=continent)) +
geom_point()
gg
library(gapminder)
library(dplyr)
library(ggplot2)
gapminder2=gapminder%>%group_by(year,continent)%>%summarise(pop_m=sum(pop/1000000,na.rm = TRUE))
gg=ggplot(gapminder2, aes(x = year, y = pop_m,size=continent)) +
geom_point()
gg
library(gapminder)
library(dplyr)
library(ggplot2)
gapminder2=gapminder%>%group_by(year,continent)%>%summarise(pop_m=sum(pop/1000000,na.rm = TRUE))
gg=ggplot(gapminder2, aes(x = year, y = pop_m,color=continent)) +
geom_point()
gg
gg=ggplot(gapminder2, aes(x = year, y = pop_m,color=continent)) +
geom_point()+scale_fill_viridis(discrete = TRUE)
gg
library(viridis)
gg=ggplot(gapminder2, aes(x = year, y = pop_m,color=continent)) +
geom_point()+scale_fill_viridis(discrete = TRUE)
gg
p <- ggplot(mtcars, aes(wt, mpg))
p + geom_point(size=4, aes(colour = factor(cyl)))
p + geom_point(size=4, aes(colour = factor(cyl))) +
scale_color_viridis(discrete=TRUE) +
theme_bw()
p + geom_point(size=4, aes(colour = factor(cyl)))
p + geom_point(size=4, aes(colour = factor(cyl))) +
scale_color_viridis(discrete=TRUE) +
theme_bw()
p + geom_point(size=4, aes(colour = factor(cyl))) +
scale_color_viridis(discrete=TRUE)
p + geom_point(size=4, aes(colour = factor(cyl))) +
scale_color_brewer(palette="Dark2")
blogdown:::new_post_addin()
library(ggplot2)
ggplot(aes(x='carat', y='price', color='clarity'), data=diamonds) +
geom_point() +
scale_color_brewer(type='qual')
library(ggplot2)
gg=ggplot(aes(x='carat', y='price', color='clarity'), data=diamonds) +
geom_point() +
scale_color_brewer(type='qual')
gg
gg=ggplot(aes(x='carat', y='price', color='clarity'), data=diamonds) +
geom_point() +
scale_color_brewer(type='qual')
gg
data001=diamonds
gg=ggplot(data001,aes(x='carat', y='price', color='clarity')) +
geom_point() +
scale_color_brewer(type='qual')
gg
glimpse(data001)
gg=ggplot(data001,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_color_brewer(type='qual')
gg
library(ggplot2)
data001=diamonds
gg=ggplot(data001,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_color_brewer(type='qual')
gg
library(ggplot2)
data001=diamonds
gg=ggplot(data001,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_color_brewer(type='seq')
gg
library(ggplot2)
data001=diamonds
gg=ggplot(data001,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_color_brewer(type='div')
gg
library(ggplot2)
data001=diamonds
gg=ggplot(data001,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_color_brewer(type='qual')
gg
library(ggplot2)
library(viridis)
data001=diamonds
gg=ggplot(data001,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_fill_viridis(discrete = TRUE)
gg
library(ggplot2)
library(plotly)
library(viridis)
data001=diamonds
p=plotly(data001,aes(x=carat, y=~price, color=~clarity))
library(ggplot2)
library(plotly)
library(viridis)
data001=diamonds
p=plotly(data=data001,aes(x=carat, y=~price, color=~clarity))
library(ggplot2)
library(plotly)
library(viridis)
data001=diamonds
p=plot_ly(data=data001,aes(x=carat, y=~price, color=~clarity))
p
library(ggplot2)
library(plotly)
library(viridis)
data001=diamonds
p=plot_ly(data=data001,aes(x=carat, y=~price, color=~clarity))
p
p=plot_ly(data=data001,x=carat, y=~price, color=~clarity)
data001=diamonds
p=plot_ly(data=data001,x=carat, y=~price, color=~clarity)
p
p=plot_ly(data=data001,x=~carat, y=~price, color=~clarity)
p
p=plot_ly(data=data001,x=~carat, y=~price, color=~clarity,colors = viridis_pal(option = "D")(3))
p
p=plot_ly(data=data001,x=~carat, y=~price, color=~clarity,colors = viridis_pal(option = "C")(3))
p
p=plot_ly(data=data001,x=~carat, y=~price, color=~clarity,colors = viridis_pal(option = "C"))
p
?viridis_pal
library(ggplot2)
library(plotly)
library(viridis)
data001=diamonds
p=plot_ly(data=data001,x=~carat, y=~price, color=~clarity,colors = viridis_pal(option = "A")(3))
p
blogdown:::serve_site()
blogdown:::serve_site()
data001=sample(diamonds,500)
library(ggplot2)
data001=sample(diamonds,500)
library(ggplot2)
data001=sample(diamonds,50)
library(ggplot2)
data001=sample(diamonds,50)
data001=diamonds
data002=sample(data001,500)
?sample
data002=sample_n(data001,5000)
library(dplyr)
data002=sample_n(data001,5000)
gg=ggplot(data001,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_color_brewer(type='qual')
gg
gg=ggplot(data002,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_color_brewer(type='qual')
gg
library(ggplot2)
library(dplyr)
data001=diamonds
data002=sample_n(data001,1000)
gg=ggplot(data002,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_color_brewer(type='qual')
gg
library(ggplot2)
library(dplyr)
data001=diamonds
data002=sample_n(data001,1000)
gg=ggplot(data002,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_color_brewer(type='qual')
gg
library(ggplot2)
library(dplyr)
data001=diamonds
data002=sample_n(data001,1000)
gg=ggplot(data002,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_color_brewer(type='qual')
gg
library(plotly)
library(viridis)
library(ggplot2)
library(dplyr)
data001=diamonds
data002=sample_n(data001,1000)
p=plot_ly(data=data002x=~carat, y=~price, color=~clarity,colors = viridis_pal(option = "B")(3))
library(plotly)
library(viridis)
library(ggplot2)
library(dplyr)
data001=diamonds
data002=sample_n(data001,1000)
p=plot_ly(data=data002,x=~carat, y=~price, color=~clarity,colors = viridis_pal(option = "B")(3))
p
library(plotly)
library(viridis)
library(ggplot2)
library(dplyr)
data001=diamonds
data002=sample_n(data001,1000)
p=plot_ly(data=data002,x=~carat, y=~price, color=~clarity,colors = viridis_pal(option = "A")(3))
p
library(plotly)
library(viridis)
library(ggplot2)
library(dplyr)
data001=diamonds
data002=sample_n(data001,1000)
p=plot_ly(data=data002,x=~carat, y=~price, color=~clarity)
p
library(ggplot2)
library(dplyr)
library(viridis)
data001=diamonds
data002=sample_n(data001,1000)
gg=ggplot(data002,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_fill_viridis(discrete = TRUE)
gg
library(ggplot2)
library(dplyr)
data001=diamonds
data002=sample_n(data001,1000)
gg=ggplot(data002,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_color_brewer(type='div')
gg
library(ggplot2)
library(dplyr)
data001=diamonds
data002=sample_n(data001,1000)
gg=ggplot(data002,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_color_brewer(type='seq')
gg
library(ggplot2)
library(dplyr)
data001=diamonds
data002=sample_n(data001,1000)
gg=ggplot(data002,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_color_brewer(type='qual')
gg
library(plotly)
library(viridis)
library(dplyr)
data002=sample_n(diamonds,1000)
p=plot_ly(data=data002,x=~carat, y=~price, color=~clarity,colors = viridis_pal(option = "B")(3))
p
# color brewer:qual
library(ggplot2)
library(dplyr)
data002=sample_n(diamonds,1000)
gg=ggplot(data002,aes(x=carat, y=price, color=clarity)) +
geom_point() +
scale_color_brewer(type='qual')
# default option
library(plotly)
library(viridis)
library(dplyr)
data002=sample_n(diamonds,1000)
plot_ly(data=data002,x=~carat, y=~price, color=~clarity,marker = list(color = brewer.pal(6, "Paired")))
# default option
library(plotly)
library(RColorBrewer)
library(dplyr)
data002=sample_n(diamonds,1000)
plot_ly(data=data002,x=~carat, y=~price, color=~clarity,marker = list(color = brewer.pal(6, "Paired")))
# default option
library(plotly)
library(RColorBrewer)
library(dplyr)
data002=sample_n(diamonds,1000)
plot_ly(data=data002,x=~carat, y=~price, color=~clarity,marker = list(color = brewer.pal(8, "goldenrod")))
# default option
library(plotly)
library(RColorBrewer)
library(dplyr)
data002=sample_n(diamonds,1000)
plot_ly(data=data002,x=~carat, y=~price, color=~clarity,marker = list(color = brewer.pal(8, "blue")))
# default option
library(plotly)
library(RColorBrewer)
library(dplyr)
data002=sample_n(diamonds,1000)
plot_ly(data=data002,x=~carat, y=~price, color=~clarity,marker = list(color = brewer.pal(8, "Paired")))
# default option
library(plotly)
library(RColorBrewer)
library(dplyr)
data002=sample_n(diamonds,1000)
plot_ly(data=data002,x=~carat, y=~price, color=~clarity,marker = list(color = brewer.pal(8, "Set3")))
# default option
library(plotly)
library(RColorBrewer)
library(dplyr)
data002=sample_n(diamonds,1000)
plot_ly(data=data002,x=~carat, y=~price, color=~clarity,marker = list(color = brewer.pal(8, "Accent")))
display.brewer.all()
# default option
library(plotly)
library(RColorBrewer)
library(dplyr)
data002=sample_n(diamonds,1000)
plot_ly(data=data002,x=~carat, y=~price, color=~clarity,marker = list(color = brewer.pal(8, "RdBu")))
# default option
library(plotly)
library(RColorBrewer)
library(dplyr)
data002=sample_n(diamonds,1000)
plot_ly(data=data002,x=~carat, y=~price, color=~clarity,colors = brewer.pal(8, "RdBu")))
# default option
library(plotly)
library(RColorBrewer)
library(dplyr)
data002=sample_n(diamonds,1000)
plot_ly(data=data002,x=~carat, y=~price, color=~clarity,colors = brewer.pal(8, "RdBu"))
blogdown:::serve_site()
blogdown:::serve_site()
# https://github.com/jeroen/mongolite
install.packages('mongolite')
# https://github.com/jeroen/mongolite
install.packages('mongolite')
library(mongolite)
# Connect to demo server
con <- mongo("mtcars", url = "mongodb://readwrite:test@mongo.opencpu.org:43942/jeroen_test")
if(con$count() > 0)
con$drop()
con$insert(mtcars)
stopifnot(con$count() == nrow(mtcars))
# Query data
mydata <- con$find()
stopifnot(all.equal(mydata, mtcars))
con$drop()
View(mydata)
library(ggplot2)
data001=mtcars
names(data001) = gsub(" ","",names(data001))
names(data001)
my_collection = mongo(collection = "mtcars", db = "mongo_db") # create connection, database and collection
my_collection$insert(data001)
library(mongolite)
m <- mongo(collection = "diamonds")
blogdown:::new_post_addin()
library(cranlogs)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(plotly)
library(lubridate)
library(jsonlite)
# Make start_day and end_day of each month
start_day=seq(as.Date("2016-01-01"), as.Date("2018-12-31"), by="month")
day_df=as.data.frame(start_day)
day_df=day_df%>%mutate(end_day=floor_date(as.Date(start_day), "month")+ months(1)-1)
# download each month total download amount
all_day_df=c()
for (row in 1:nrow(day_df)){
start_day <- day_df[row, "start_day"]
end_day  <- day_df[row, "end_day"]
url=paste0('https://cranlogs.r-pkg.org/downloads/total/',start_day,':',end_day,'/R')
data <- fromJSON(url)
all_day_df=rbind(all_day_df,data)
}
# summary the data
all_day_df=all_day_df%>%mutate(year=year(start),month=month(start),day=day(start))
all_day_df=all_day_df%>%group_by(year,month)%>%summarise(downloads=sum(downloads))
# plot data
p=plot_ly(data=all_day_df,y=~downloads,x=~month
,color = ~as.factor(year)
,type = 'scatter', mode = 'lines+markers')
p%>%layout(title = 'R software download')
View(day_df)
View(all_day_df)
View(all_day_df)
library(cranlogs)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(plotly)
library(lubridate)
library(jsonlite)
# Make start_day and end_day of each month
start_day=seq(as.Date("2016-01-01"), as.Date("2018-12-31"), by="month")
day_df=as.data.frame(start_day)
day_df=day_df%>%mutate(end_day=floor_date(as.Date(start_day), "month")+ months(1)-1)
# download each month total download amount
all_day_df=c()
for (row in 1:nrow(day_df)){
start_day <- day_df[row, "start_day"]
end_day  <- day_df[row, "end_day"]
url=paste0('https://cranlogs.r-pkg.org/downloads/total/',start_day,':',end_day,'/R')
data <- fromJSON(url)
all_day_df=rbind(all_day_df,data)
}
library(cranlogs)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(plotly)
library(lubridate)
library(jsonlite)
# Make start_day and end_day of each month
start_day=seq(as.Date("2016-01-01"), as.Date("2018-12-31"), by="month")
day_df=as.data.frame(start_day)
day_df=day_df%>%mutate(end_day=floor_date(as.Date(start_day), "month")+ months(1)-1)
# download each month total download amount
all_day_df=c()
for (row in 1:nrow(day_df)){
start_day <- day_df[row, "start_day"]
end_day  <- day_df[row, "end_day"]
url=paste0('https://cranlogs.r-pkg.org/downloads/total/',start_day,':',end_day,'/R')
data <- fromJSON(url)
all_day_df=rbind(all_day_df,data)
}
blogdown:::serve_site()
cran_top_downloads("last-week")
R_download=cran_downloads( packages='Rcpp',from='2017-01-01',to='2018-12-31')
R_download002=R_download%>%mutate(year=year(date),month=month(date),day=day(date)
)%>%group_by(year,month)%>%summarise(downloads=sum(count))
glimpse(R_download002)
p=plot_ly(data=R_download002,y=~count,x=~month
,color = ~as.factor(year)
,type = 'scatter', mode = 'lines+markers')
p
glimpse(R_download002)
p=plot_ly(data=R_download002,y=~downloads,x=~month
,color = ~as.factor(year)
,type = 'scatter', mode = 'lines+markers')
p
glimpse(R_download)
R_download=cran_downloads( packages='ggplot2',from='2017-01-01',to='2018-12-31')
glimpse(R_download)
R_download002=R_download%>%mutate(year=year(date),month=month(date),day=day(date)
)%>%group_by(year,month)%>%summarise(downloads=sum(count))
glimpse(R_download002)
p=plot_ly(data=R_download002,y=~downloads,x=~month
,color = ~as.factor(year)
,type = 'scatter', mode = 'lines+markers')
p
R_download=cran_downloads( packages='ggplot2',from='2016-01-01',to='2018-12-31')
glimpse(R_download)
R_download002=R_download%>%mutate(year=year(date),month=month(date),day=day(date)
)%>%group_by(year,month)%>%summarise(downloads=sum(count))
glimpse(R_download002)
p=plot_ly(data=R_download002,y=~downloads,x=~month
,color = ~as.factor(year)
,type = 'scatter', mode = 'lines+markers')
p
cran_top_downloads("last-week")
install.packages('ggplot2')
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(cranlogs)
library(dplyr)
library(plotly)
library(cranlogs)
library(dplyr)
library(plotly)
library(lubridate)
# downlaod data
R_download=cran_downloads( packages='ggplot2',from='2016-01-01',to='2018-12-31')
# data summary
R_download002=R_download%>%mutate(year=year(date),month=month(date),day=day(date))%>%
group_by(year,month)%>%summarise(downloads=sum(count))
# plot
p=plot_ly(data=R_download002,y=~downloads,x=~month
,color = ~as.factor(year)
,type = 'scatter', mode = 'lines+markers')
p
library(cranlogs)
library(dplyr)
library(plotly)
library(lubridate)
cran_top_downloads("last-week")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
servr::daemon_stop("2267816180520")
blogdown:::serve_site()
servr::daemon_stop("2267816179832")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
library(cranlogs)
library(dplyr)
library(plotly)
library(lubridate)
# downlaod data
R_download=cran_downloads( packages='ggplot2',from='2016-01-01',to='2018-12-31')
# data summary
R_download002=R_download%>%mutate(year=year(date),month=month(date),day=day(date))%>%
group_by(year,month)%>%summarise(downloads=sum(count))
# plot
p=plot_ly(data=R_download002,y=~downloads,x=~month
,color = ~as.factor(year)
,type = 'scatter', mode = 'lines+markers')
p%>%layout(title = 'ggplot2 download')
blogdown:::update_meta_addin()
colourpicker:::plotHelperAddin()
blogdown:::serve_site()
servr::daemon_stop("2075707295976")
blogdown:::serve_site()
